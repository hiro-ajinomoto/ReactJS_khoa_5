{"version":3,"sources":["pages/Todolist/bg.png","util/constants/settingSystem.js","components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","pages/BaiTapToDoListSaga/bg.png","assets/img/download.jfif","assets/img/download (1).jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.js","pages/About/About.js","pages/BaiTapToDoListSaga/BaiTapToDoListSaga.js","redux/constants/ToDoListConst.js","util/history.js","pages/Contact/Contact.js","pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js","redux/actions/CyberBugsActions.js","redux/constants/Cyberbugs/Cyberbugs.js","HOC/Modal/SlideDown.js","pages/Login/Login.js","pages/Register/Register.js","pages/DemoHOCModal/DemoHOCModal.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/Todolist/Todolist.js","redux/actions/ToDoListAction.js","pages/Todolist/ToDoListRedux.js","pages/Todolist/TodolistRFC.js","components/Home/Header/Header.js","templates/HomeTemplate/HomeTemplate.js","templates/HomeTemplate/UserLoginTemplate.js","components/Cyberbugs/MenuCyberbugs.js","components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs.js","redux/constants/Cyberbugs/StatusConstant.js","redux/constants/Cyberbugs/PriorityConstants.js","redux/constants/Cyberbugs/TaskTypeConstants.js","redux/constants/Cyberbugs/TaskConstants.js","redux/constants/Cyberbugs/CommentConstants.js","components/Forms/FormCreateTask/FormCreateTask.js","redux/constants/Cyberbugs/ProjectCyberBugsConstants.js","redux/constants/Cyberbugs/UserConstatnts.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","components/Cyberbugs/Main/ContentMain.js","components/Cyberbugs/Main/HeaderMain.js","components/Cyberbugs/Main/InfoMain.js","pages/CyberBugs/ProjectDetail/indexCyberBugs.js","pages/CyberBugs/CreateProject/CreateProject.js","components/Forms/FormEditProject.js/FormEditProject.js","pages/CyberBugs/ProjectManagement/ProjectManagement.js","HOC/CyberbugsHOC/DrawerCyberBugs.js","pages/Demo/Demo.js","pages/DragAndDropDnD/DragAndDropDnD.js","pages/CyberBugs/Users/Users.js","pages/CyberBugs/Users/EditUser/EditUser.js","pages/CyberBugs/Users/AddUsers/AddUsers.js","App.js","serviceWorker.js","redux/reducers/ToDoListReducer.js","redux/reducers/LoadingReducer.js","redux/reducers/ModalReducer.js","services/ToDoListService.js","redux/sagas/ToDoListSaga.js","redux/constants/LoadingConst.js","services/CyberbugsService.js","services/baseService.js","services/UserService.js","redux/sagas/Cyberbugs/UserCyberbugsSaga.js","redux/sagas/Cyberbugs/ProjectCategorySaga.js","services/ProjectService.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/ProjectSaga.js","services/TaskTypeService.js","redux/sagas/Cyberbugs/TaskTypeSaga.js","services/PriorityService.js","redux/sagas/Cyberbugs/PrioritySaga.js","services/TaskService.js","redux/sagas/Cyberbugs/TaskSaga.js","services/StatusService.js","redux/sagas/Cyberbugs/StatusSaga.js","services/CommentService.js","redux/sagas/Cyberbugs/CommentSaga.js","redux/sagas/rootSaga.js","redux/reducers/HistoryReducer.js","redux/reducers/UserCyberBugsReducer.js","redux/reducers/ProjectCategoryReducer.js","redux/reducers/ProjectCyberBugsReducer.js","redux/reducers/DrawerCyberbugs.js","redux/reducers/ProjectReducer.js","redux/reducers/TaskTypeReducer.js","redux/reducers/PriorityReducer.js","redux/reducers/StatusReducer.js","redux/reducers/TaskReducer.js","redux/reducers/CommentReducer.js","redux/configStore.js","index.js"],"names":["module","exports","DOMAIN","DOMAIN_CYBERBUG","TOKEN","USER_LOGIN","STATUS_CODE","SUCCESS","NOT_FOUND","SERVER_ERROR","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","src","require","alt","About","BaiTapToDoListSaga","props","dispatch","useDispatch","taskList","ToDoListReducer","useState","values","taskName","errors","setState","useEffect","getTaskList","type","addTask","e","preventDefault","delTask","onClick","onSubmit","id","name","placeholder","onChange","target","value","newValues","newErrors","test","trim","filter","item","status","map","index","key","history","createBrowserHistory","Contact","push","LoginCyberBugsWithFormik","withFormik","enableReinitialize","mapPropsToValues","email","password","validationSchema","Yup","shape","required","min","max","handleSubmit","setSubmitting","userLogin","singinCyberbugAction","displayName","handleChange","touched","style","height","window","innerHeight","fontWeight","fontSize","width","minWidth","size","prefix","UserOutlined","LockOutlined","htmlType","backgroundColor","color","icon","TwitterOutlined","connect","SlideDown","Component","propsSpring","useSpring","to","marginTop","from","config","duration","div","Login","userName","passWord","setUserLogin","console","log","event","newUserLogin","valid","goBack","localStorage","setItem","JSON","stringify","alert","when","message","location","Register","componentSize","setComponentSize","formik","useFormik","initialValues","phoneNumber","matches","userInfo","onSubmitCapture","labelCol","span","wrapperCol","layout","onValuesChange","Item","label","onClickCapture","DemoHOCModal","LoginWithSlideDown","data-toggle","data-target","Detail","match","params","path","Home","UserLoginCyberBugsReducer","avatar","PageNotFound","url","Profile","getItem","Todolist","promise","Axios","method","then","result","data","catch","err","response","renderTaskToDo","checkTask","renderTaskToDoDone","rejectTask","res","this","getTaskListApi","a","ToDoListRedux","rejectTaskApi","checkTaskApi","deleteTaskApi","TodolistRFC","Header","aria-controls","aria-expanded","aria-label","activeClassName","activeStyle","href","aria-haspopup","aria-labelledby","HomeTemplate","restParam","render","propsRoute","Sider","Layout","Footer","Content","UserLoginTemplate","Math","round","innerWidth","setSize","onresize","restRoute","backgroundImage","backgroundSize","MenuCyberbugs","ModalCyberBugs","taskDetailModal","TaskReducer","arrStatus","StatusReducer","arrPriority","PriorityReducer","arrTaskType","TaskTypeReducer","projectDetail","ProjectReducer","updatingComment","CommentReducer","visibleEditor","setVisibleEditor","description","historyContent","setHistoryContent","content","setContent","actionType","contentComment","commentContent","_","isEqual","commentDetail","taskId","commentId","newCommentContent","setFieldValue","tabIndex","role","aria-hidden","typeId","tp","taskType","display","paddingRight","cursor","data-dismiss","jsxDescription","ReactHtmlParser","initialValue","init","selector","menubar","plugins","toolbar","onEditorChange","editor","renderDescription","allowClear","lstComment","comment","marginBottom","statusId","statusName","assigness","user","marginLeft","userId","options","members","mem","findIndex","us","optionFilterProp","onSelect","userSelected","find","priorityId","priority","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","aria-valuenow","aria-valuemin","aria-valuemax","justifyContent","renderTimeTracking","Option","Select","children","i","toString","frmCreateTask","arrProject","projectId","listUserAsign","taskObject","ProjectCyberBugsReducer","arrUser","userOptions","handleBlur","setValues","React","timeTracking","setTimetracking","submitFunction","keyWord","idProject","project","projectName","statusItem","mode","defaultValue","SidebarCyberbugs","collapsed","trigger","collapsible","BarsOutlined","theme","defaultSelectedKeys","PlusOutlined","title","SearchOutlined","CyberbugsTemplate","ContentMain","handleDragEnd","parse","draggableId","source","destination","droppableId","taskUpdateStatus","onDragEnd","lstTask","taskListDetail","provided","ref","innerRef","droppableProps","lstTaskDeTail","task","draggableProps","dragHandleProps","priorityTask","renderCardTaskList","HeaderMain","aria-current","InfoMain","renderAvatar","IndexCyberBugs","createProjectForm","categoryId","arrProjectCategory","newProject","ProjectCategoryReducer","projectCategoryName","EditProjectForm","projectEdit","prjectUpdate","disabled","ProjectManagement","projectList","userSearch","setValue","searchRef","useRef","filteredInfo","sortedInfo","columns","dataIndex","sorter","item2","item1","sortDirections","text","record","projectName1","toLowerCase","categoryName1","categoryName","creator","creator1","slice","member","placement","borderRadius","userProject","length","valueSelect","option","onSearch","current","clearTimeout","setTimeout","projectEditModel","FormOutlined","onConfirm","okText","cancelText","DeleteOutlined","order","columnKey","rowKey","dataSource","pagination","filters","DrawerCyberBugs","drawerReducer","visible","ComponentContentDrawer","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","textAlign","marginRight","Demo","setTaskList","tagDrag","tagDragEnter","rotate","bottom","reset","set","handleDragStart","handleDragEnter","taskDragEnter","taskListUpdate","indexDragTag","indexDragEnter","temp","onDragOver","stopPropagation","onDrop","cssDrag","cssDragEnter","transform","interpolate","r","position","onDragStart","onDragEnter","draggable","onDragLeave","DragAndDropDnD","toDo","items","inProgress","done","itemCopy","splice","statusTask","Search","Input","Users","keyword","debounceSearch","useCallback","debounce","suffix","AudioOutlined","EditUser","editingUser","editingUserInfo","AddUsers","App","useHistory","exact","LoginCyberBugs","indexCyberBugs","CreateProject","component","Boolean","hostname","initialState","stateDefault","toDoListService","getTaskApi","addTaskApi","checkDoneTask","getTaskApiAction","theoDoiActionGetTaskApi","addTaskApiAction","theoDoiActionAddTaskApi","theoDoiActionDeleteTask","checkDoneTaskApi","theoDoiDoneTask","theoDoiRejectTask","action","put","call","delay","takeLatest","default","cyberbugsService","headers","projectUpdate","baseService","model","Authorization","post","get","delete","userService","getUser","assignUserProject","deleteUserFromProject","getUserByProjectId","signUpService","deleteUser","editUser","signinSaga","theoDoiSignin","getUserSaga","theoDoiGetUser","addUserProjectSaga","theoDoiAddUserProject","removeUserProjectSaga","theoDoiRemoveUserProject","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","SignUpSaga","theoDoiSignUpSaga","deleteUserSaga","theoDoiDeleteUserSaga","editUserSaga","theoDoiEditUserSaga","addUserSaga","theoDoiAddUserSaga","accessToken","lstUserSearch","statusCode","confirm","reload","getAllProjectCategorySaga","theoDoigetAllProjectCategory","projectService","getAllProject","deleteProject","getProjectDetail","notifiFunction","notification","createProjectSaga","theoDoiCreateProjectSaga","getListProjectSaga","theoDoiGetListProjectSaga","updateProjectSaga","theoDoiUpdateProjectSaga","deleteProjectSaga","theoDoiDeleteProject","getProjectDetailSaga","theoDoiGetProjectDetail","getProjectAllSaga","theoDoiGetAllProjectSaga","taskTypeService","getAllTaskType","getAllTaskTypeSaga","theoDoiGetAllTaskTypeSaga","priorityService","getAllPriority","getAllPrioritySaga","theoDoiGetAllPriority","taskService","createTask","getTaskDetail","updateStatusTask","taskStatusUpdate","updateTask","taskUpdate","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","updateTaskStatusSaga","theoDoiUpdateTaskStatusSaga","updateTaskSaga","theoDoiUdpateTask","handelChangePostApi","theoDoiHandleChangePostApi","select","taskUpdateApi","statusService","getAllStatus","getAllStatusSaga","theoDoiGetAllStatusSaga","commentService","insertCommentService","deleteCommentService","idComment","updateCommentService","newContentComment","insertCommentSaga","theoDoiInsertCommentSaga","deleteCommentSaga","theoDoiDeleteCommentSaga","updateCommentSaga","theoDoiUpdateCommentSaga","rootSaga","all","ToDoListSaga","Cyberbugs","ProjectCategorySaga","ProjectSaga","StatusSaga","TaskTypeSaga","PrioritySaga","TaskSaga","CommentSaga","historyState","usLogin","propsValue","taskTypeDetail","alias","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","ModalReducer","HistoryReducer","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6da1c559.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","export const DOMAIN = \"http://svcy.myclass.vn/api\";\n\nexport const DOMAIN_CYBERBUG = \"http://casestudy.cyberlearn.vn/api/\";\n\nexport const TOKEN = \"ACCESSTOKEN\";\nexport const USER_LOGIN = \"USER_LOGIN\";\n\nexport const STATUS_CODE = {\n  SUCCESS: 200,\n  NOT_FOUND: 404,\n  SERVER_ERROR: 500\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__GfYmh\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","module.exports = __webpack_public_path__ + \"static/media/download.1c8cee9f.jfif\";","module.exports = __webpack_public_path__ + \"static/media/download (1).e96d3ef9.jfif\";","import React from \"react\";\nimport styleLoading from \"./LoadingComponent.module.css\";\nimport { useSelector } from \"react-redux\";\n\nexport default function LoadingComponent() {\n  const { isLoading } = useSelector((state) => state.LoadingReducer);\n\n  if (isLoading) {\n    return (\n      <div className={styleLoading.bgLoading}>\n        <img\n          src={require(\"../../../assets/imgLoading/loading.gif\")}\n          alt=\"img loading\"\n        />\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ADD_TASK_API,\n  CHECK_TASK_API,\n  DELETE_TASK_API,\n  GET_TASKLIST_API,\n  REJECT_TASK_API\n} from \"../../redux/constants/ToDoListConst\";\n\nexport default function BaiTapToDoListSaga(props) {\n  const dispatch = useDispatch();\n  const { taskList } = useSelector((state) => state.ToDoListReducer);\n\n  let [state, setState] = useState({\n    taskList: [],\n    values: {\n      taskName: \"\"\n    },\n    errors: {\n      taskName: \"\"\n    }\n  });\n  useEffect(() => {\n    //Gọi hàm getTaskList\n    getTaskList();\n\n    return () => {};\n  }, []);\n\n  const handleChange = (e) => {\n    let { value, name } = e.target;\n    let newValues = { ...state.values };\n\n    newValues = { ...newValues, [name]: value };\n\n    let newErrors = { ...state.errors };\n\n    let regexString = /^[a-z A-Z]+$/;\n\n    if (!regexString.test(value) || value.trim() === \"\") {\n      newErrors[name] = name + \" invalid !\";\n    } else {\n      newErrors[name] = \"\";\n    }\n\n    setState({\n      ...state,\n      values: newValues,\n      errors: newErrors\n    });\n  };\n\n  const getTaskList = () => {\n    //Dispatch action saga\n    dispatch({\n      type: GET_TASKLIST_API\n    });\n  };\n\n  const addTask = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_TASK_API,\n      taskName: state.values.taskName\n    });\n  };\n\n  //Xử lý reject task\n  const rejectTask = (taskName) => {\n    dispatch({\n      type: REJECT_TASK_API,\n      taskName\n    });\n  };\n\n  //Xử lý done task\n  const checkTask = (taskName) => {\n    dispatch({\n      type: CHECK_TASK_API,\n      taskName\n    });\n  };\n\n  //Hàm xử lý xóa task\n  const delTask = (taskName) => {\n    dispatch({\n      type: DELETE_TASK_API,\n      taskName: taskName\n    });\n  };\n\n  const renderTaskToDo = () => {\n    return taskList\n      .filter((item) => !item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  checkTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-check-circle\" />\n                <i className=\"fas fa-check-circle\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  const renderTaskToDoDone = () => {\n    return taskList\n      .filter((item) => item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  rejectTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-undo\" />\n                <i className=\"fas fa-undo\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  return (\n    <div className=\"card\">\n      <button\n        className=\"btn btn-success\"\n        onClick={() => {\n          dispatch({\n            type: \"getTaskApiAction\"\n          });\n        }}\n      >\n        Dispatch action saga getTaskAPI\n      </button>\n      <div className=\"card__header\">\n        <img src={require(\"./bg.png\")} />\n      </div>\n      {/* <h2>hello!</h2> */}\n      <form className=\"card__body\" onSubmit={addTask}>\n        <div className=\"card__content\">\n          <div className=\"card__title\">\n            <h2>My Tasks</h2>\n            <p>September 9,2020</p>\n          </div>\n          <div className=\"card__add\">\n            <input\n              id=\"newTask\"\n              name=\"taskName\"\n              type=\"text\"\n              placeholder=\"Enter an activity...\"\n              onChange={handleChange}\n            />\n            <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n              <i className=\"fa fa-plus\" />\n            </button>\n          </div>\n          <div className=\"card__todo\">\n            {/* Uncompleted tasks */}\n            <ul className=\"todo\" id=\"todo\">\n              {renderTaskToDo()}\n            </ul>\n            {/* Completed tasks */}\n            <ul className=\"todo\" id=\"completed\">\n              {renderTaskToDoDone()}\n            </ul>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","//-----------action----------\nexport const GET_TASK_API = 'GET_TASK_API';\n\n//---------------saga--------------\n\nexport const GET_TASKLIST_API = 'GET_TASKLIST_API';\nexport const ADD_TASK_API = 'ADD_TASK_API';\nexport const CHECK_TASK_API = 'CHECK_TASK_API';\nexport const DELETE_TASK_API = 'DELETE_TASK_API';\nexport const REJECT_TASK_API = 'REJECT_TASK_API';\n\n\n\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import React from 'react'\nimport { history } from '../../util/history'\n\nexport default function Contact() {\n    return (\n        <div>\n            liên hệ\n          <button onClick={()=>{history.push('/demohocmodal')}}>123</button>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Button, Input } from \"antd\";\nimport { UserOutlined, LockOutlined, TwitterOutlined } from \"@ant-design/icons\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { singinCyberbugAction } from \"../../../redux/actions/CyberBugsActions\";\nfunction LoginCyberBugs(props) {\n  const { errors, handleChange, handleSubmit, touched } = props;\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"container\"\n      style={{ height: window.innerHeight }}\n    >\n      <div\n        className=\"d-flex flex-column justify-content-center align-items-center\"\n        style={{ height: window.innerHeight }}\n      >\n        <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>\n          Login cyberbugs\n        </h3>\n        <div className=\"d-flex mt-3\">\n          <Input\n            onChange={handleChange}\n            style={{ width: \"100%\", minWidth: 300 }}\n            name=\"email\"\n            size=\"large\"\n            placeholder=\"email\"\n            prefix={<UserOutlined />}\n          />\n        </div>\n        <div className=\"text-danger\">\n          {errors.email && touched.email ? errors.email : \"\"}\n        </div>\n\n        <div className=\"d-flex mt-3\">\n          <Input\n            onChange={handleChange}\n            style={{ width: \"100%\", minWidth: 300 }}\n            type=\"password\"\n            name=\"password\"\n            size=\"large\"\n            placeholder=\"password\"\n            prefix={<LockOutlined />}\n          />\n        </div>\n\n        <div className=\"text-danger\">\n          {errors.password && touched.password ? errors.password : null}\n        </div>\n\n        <Button\n          htmlType=\"submit\"\n          size=\"large\"\n          style={{\n            minWidth: 300,\n            backgroundColor: \"rgb(102,117,223)\",\n            color: \"#fff\"\n          }}\n          className=\"mt-5\"\n        >\n          Login\n        </Button>\n\n        <div className=\"social mt-3 d-flex\">\n          <Button\n            style={{ backgroundColor: \"rgb(59,89,152)\" }}\n            shape=\"circle\"\n            size={\"large\"}\n          >\n            <span className=\"font-weight-bold\" style={{ color: \"#fff\" }}>\n              F\n            </span>\n          </Button>\n          <Button\n            type=\"primary ml-3\"\n            shape=\"circle\"\n            icon={<TwitterOutlined />}\n            size={\"large\"}\n          ></Button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nconst LoginCyberBugsWithFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => ({\n    email: \"\",\n    password: \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required!\")\n      .email(\"email is invalid!\"),\n    password: Yup.string()\n      .min(6, \"password must have min 6 characters\")\n      .max(32, \"password  have max 32 characters\")\n  }),\n  handleSubmit: ({ email, password }, { props, setSubmitting }) => {\n    setSubmitting(true);\n    props.dispatch(singinCyberbugAction(email, password));\n  },\n  displayName: \"LoginCyberBugs\"\n})(LoginCyberBugs);\n\nexport default connect()(LoginCyberBugsWithFormik);\n","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\"\n\n\n\nexport const singinCyberbugAction = (email, password) => {\n    return {\n        type: USER_SIGNIN_API,\n        userLogin: {\n            email: email,\n            password: password\n        }\n    }\n}","export const USER_SIGNIN_API = \"USER_SIGNIN_API\";\n\n//------------------login ------\nexport const USLOGIN = \"USLOGIN\";\n\n//-------------get project category ---------\n\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = \"GET_ALL_PROJECT_CATEGORY_SAGA\";\n\nexport const GET_ALL_PROJECT_CATEGORY = \"GET_ALL_PROJECT_CATEGORY\";\n\nexport const SIGN_UP_SAGA = \"SIGN_UP_SAGA\";\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\n\nexport default function SlideDown(Component) {\n\n    const propsSpring = useSpring({\n        to: {\n            marginTop: '0'\n        }, from: {\n            marginTop: '-100px'\n\n        },config: {\n            duration:500\n        }\n    })\n\n\n    return (\n        <div>\n            <animated.div style={propsSpring}>\n                <Component />\n            </animated.div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Prompt } from 'react-router-dom';\n\n\n\n\nexport default function Login(props) {\n\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\n\n\n    console.log(userLogin)\n    const handleChange = (event) => {\n        const {name,value} = event.target;\n\n        const newUserLogin = {\n            ...userLogin,\n            [name]:value\n        };\n\n\n        let valid = true;\n        for(let key in newUserLogin) {\n            if(key !== 'status') {\n                if(newUserLogin[key].trim()===''){\n                    valid = false;\n                }\n            }\n        }\n\n        if(!valid) {\n            newUserLogin.status = true;\n        }else {\n            newUserLogin.status = false;\n        }\n\n        setUserLogin(newUserLogin);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\n            //Thành công thì chuyển về trang trước đó\n            // props.history.goBack();\n            //Chuyển đến trang chỉ định sau khi xử lý\n            // Chuyển hướng đến path tương ứng\n            //  props.history.push('/home');\n            //replace thay đổi nội dung path tương ứng\n            // props.history.replace('/home');\n            props.history.goBack();\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\n\n        }else {\n            alert('Login fail !')\n            return;\n        }\n    }\n\n    return (\n        <form className=\"container\" onSubmit={handleLogin}>\n            <h3 className=\"display-4\">Login</h3>\n            <div className=\"form-group\">\n                <p>User Name</p>\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n                <p>Password</p>\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n               <button className=\"btn btn-success\">Đăng nhập</button>\n            </div>\n            <Prompt when={userLogin.status} message={(location) => {\n                return 'Bạn có chắc muốn rời khỏi trang này !'\n            }} />\n        </form>\n    )\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { SIGN_UP_SAGA } from \"../../redux/constants/Cyberbugs/Cyberbugs\";\nimport { history } from \"../../util/history\";\n\nexport default function Register() {\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const dispatch = useDispatch();\n  const onFormLayoutChange = ({ size }) => {\n    setComponentSize(size);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      passWord: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(6, \"Tài khoản phải trên 6 ký tự\")\n        .max(30, \"Tài khoản phải ít hơn 40 ký tự\")\n        .required(\"Không được bỏ trống!\"),\n      passWord: Yup.string()\n        .min(6, \"Password phải trên 6 ký tự\")\n        .required(\"Không được bỏ trống!\"),\n\n      email: Yup.string()\n        .required(\"Không được bỏ trống!\")\n        .email(\"Email không hợp lệ! Vui lòng nhập lại\"),\n      //   hoTen: Yup.string().required(\"Không được bỏ trống!\"),\n      phoneNumber: Yup.string()\n        .matches(\n          /(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b/,\n          \"Số ĐT không hơp lệ! Vui lòng nhập lại\"\n        )\n        .required(\"Không được bỏ trống!\")\n    }),\n\n    onSubmit: (values) => {\n      console.log(\"valus\", values);\n      dispatch({\n        type: SIGN_UP_SAGA,\n        userInfo: values\n      });\n    }\n  });\n  return (\n    <Form\n      onSubmitCapture={formik.handleSubmit}\n      labelCol={{\n        span: 4\n      }}\n      wrapperCol={{\n        span: 14\n      }}\n      layout=\"horizontal\"\n      initialValues={{\n        size: componentSize\n      }}\n      onValuesChange={onFormLayoutChange}\n      size={componentSize}\n    >\n      <h3 className=\"ml-3\">Sign up</h3>\n      <div style={{ height: 60 }}>\n        <Form.Item label=\"Tên\">\n          <Input name=\"name\" onChange={formik.handleChange} />\n          {formik.errors.name ? formik.errors.name : \"\"}\n        </Form.Item>\n      </div>\n\n      <div style={{ height: 60 }}>\n        <Form.Item label=\"Password\">\n          <Input name=\"passWord\" onChange={formik.handleChange} />\n          {formik.errors.passWord ? formik.errors.passWord : \"\"}\n        </Form.Item>\n      </div>\n\n      <div style={{ height: 60 }}>\n        <Form.Item label=\"Email\">\n          <Input name=\"email\" onChange={formik.handleChange} />\n          {formik.errors.email ? formik.errors.email : \"\"}\n        </Form.Item>\n      </div>\n\n      <div style={{ height: 60 }}>\n        <Form.Item label=\"Số điện thoại\">\n          <Input name=\"phoneNumber\" onChange={formik.handleChange} />\n          {formik.errors.phoneNumber ? formik.errors.phoneNumber : \"\"}\n        </Form.Item>\n      </div>\n\n      <Form.Item label=\"Tác vụ\">\n        <Button htmlType=\"submit\" className=\"mr-2\">\n          Đăng ký\n        </Button>\n        <Button\n          onClickCapture={() => {\n            history.push(\"login\");\n          }}\n        >\n          Đăng nhập\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React from 'react'\nimport {useDispatch} from 'react-redux'\nimport SlideDown from '../../HOC/Modal/SlideDown';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\n\n\n\n\nexport default function DemoHOCModal() {\n    const LoginWithSlideDown = () =>  new SlideDown(Login);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {/* Button trigger modal */}\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component: <Login />\n                })\n\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng nhập\n            </button>\n\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component:<Register />\n                })\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng ký\n            </button>\n\n            <LoginWithSlideDown />\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Detail(props) {\n\n    return (\n        <div>\n            Giá trị tham số: {props.match.params.id}\n            <br />\n            Path name hiện tại: {props.match.path}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function Home(props) {\n    const userLogin = useSelector(state => state.UserLoginCyberBugsReducer.userLogin)\n    return (\n        <div>\n            {userLogin?.name}\n            <img src={userLogin?.avatar} />\n        </div>\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function PageNotFound(props) {\n    return (\n        <div>\n            Không tìm thấy trang {props.match.url}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default function Profile(props) {\n\n\n    if (localStorage.getItem('userLogin')) {\n        return (\n            <div>\n                profile\n            </div>\n        )\n    }else {\n        alert('Vui lòng đăng nhập để vào trang này !');\n        return <Redirect to=\"/login\" />\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport style from './Todolist.css'\n\nexport default class Todolist extends Component {\n\n    state = {\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    }\n\n    getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            this.setState({\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    renderTaskToDo = () => {\n        return this.state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={()=>{\n                        this.checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    \n    renderTaskToDoDone = () => {\n        return this.state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button  type=\"button\" className=\"complete\" onClick={()=>{\n                        this.rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    //Xử lý reject task\n    rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n    checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            this.getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    //Hàm sẽ tự động thực thi sau khi nội dung component được render\n    componentDidMount() {\n        this.getTaskList();\n    }\n\n\n    handleChange = (e) => {\n        let { value, name } = e.target;\n        console.log(value, name);\n        let newValues = { ...this.state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...this.state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        this.setState({\n            ...this.state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n    addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(this.state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: this.state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            this.getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.addTask}>\n                {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\n                <div className=\"card\">\n                    <div className=\"card__header\">\n                        <img src={require('./bg.png')} />\n                    </div>\n                    {/* <h2>hello!</h2> */}\n                    <div className=\"card__body\">\n                        <div className=\"card__content\">\n                            <div className=\"form-group\">\n                                <div className=\"card__title\">\n                                    <h2>My Tasks</h2>\n                                    <p>September 9,2020</p>\n                                </div>\n                                <div className=\"card__add\">\n                                    <input name=\"taskName\" onChange={this.handleChange} id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\n\n                                    <button id=\"addItem\" onClick={this.addTask}>\n                                        <i className=\"fa fa-plus\" />\n                                    </button>\n                                </div>\n                                <span className=\"text text-danger\">{this.state.errors.taskName}</span>\n                            </div>\n\n                            <div className=\"card__todo form-group\">\n                                {/* Uncompleted tasks */}\n                                <ul className=\"todo\" id=\"todo\">\n                                    {this.renderTaskToDo()}\n                                </ul>\n                                {/* Completed tasks */}\n                                <ul className=\"todo\" id=\"completed\">\n                                    {this.renderTaskToDoDone()}\n\n                                    {/* <li>\n                                    <span>Ăn sáng</span>\n                                    <div className=\"buttons\">\n                                        <button className=\"remove\">\n                                            <i className=\"fa fa-trash-alt\" />\n                                        </button>\n                                        <button className=\"complete\">\n                                            <i className=\"far fa-check-circle\" />\n                                            <i className=\"fas fa-check-circle\" />\n                                        </button>\n                                    </div>\n                                </li> */}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n","import Axios from \"axios\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\";\n\nexport const getTaskListApi = () => {\n  return async (dispatch) => {\n    try {\n      let { data, status, ...res } = await Axios({\n        url: \"http://svcy.myclass.vn/api/ToDoList/GetAllTask\",\n        method: \"GET\"\n      });\n      if (status === 200) {\n        dispatch({\n          type: GET_TASK_API,\n          taskList: data\n        });\n      }\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  };\n};\n\nexport const addTaskApi = (taskName) => {\n  return async (dispatch) => {\n    try {\n      let { status } = await Axios({\n        url: \"http://svcy.myclass.vn/api/ToDoList/AddTask\",\n        method: \"POST\",\n        data: { taskName: taskName }\n      });\n\n      if (status === 200) {\n        dispatch(getTaskListApi());\n      }\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  };\n};\n\nexport const deleteTaskApi = (taskName) => {\n  return (dispatch) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n      method: \"DELETE\"\n    });\n\n    promise.then((result) => {\n      //Sau khi thực hiện api gọi phương thức dispatchAction get TaskListApi để load lại task\n      dispatch(getTaskListApi());\n    });\n\n    promise.catch((errors) => {\n      alert(errors.response.data);\n    });\n  };\n};\n\nexport const checkTaskApi = (taskName) => {\n  return (dispatch) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n      method: \"PUT\"\n    });\n\n    promise.then((res) => {\n      dispatch(getTaskListApi());\n    });\n\n    promise.catch((err) => {\n      alert(err.response.data);\n    });\n  };\n};\n\nexport const rejectTaskApi = (taskName) => {\n  return (dispatch) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n      method: \"PUT\"\n    });\n\n    promise.then((res) => {\n      alert(res.data);\n      dispatch(getTaskListApi());\n    });\n\n    promise.catch((err) => {\n      alert(err.response.data);\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  addTaskApi,\n  deleteTaskApi,\n  getTaskListApi,\n  checkTaskApi,\n  rejectTaskApi\n} from \"../../redux/actions/ToDoListAction\";\n\nexport default function ToDoListRedux(props) {\n  const { taskList } = useSelector((state) => state.ToDoListReducer);\n  const dispatch = useDispatch();\n\n  let [state, setState] = useState({\n    values: {\n      taskName: \"\"\n    },\n    errors: {\n      taskName: \"\"\n    }\n  });\n\n  const handleChange = (e) => {\n    let { value, name } = e.target;\n    let newValues = { ...state.values };\n\n    newValues = { ...newValues, [name]: value };\n\n    let newErrors = { ...state.errors };\n\n    let regexString = /^[a-z A-Z]+$/;\n\n    if (!regexString.test(value) || value.trim() === \"\") {\n      newErrors[name] = name + \" invalid !\";\n    } else {\n      newErrors[name] = \"\";\n    }\n\n    setState({\n      ...state,\n      values: newValues,\n      errors: newErrors\n    });\n  };\n\n  const getTaskList = () => {\n    dispatch(getTaskListApi());\n  };\n\n  const addTask = (e) => {\n    e.preventDefault(); //Dừng sự kiện submit form\n\n    //Xử lý nhận dữ liệu từ người dùng nhập => gọi action addTaskApi()\n    dispatch(addTaskApi(state.values.taskName));\n  };\n\n  useEffect(() => {\n    getTaskList();\n\n    return () => {};\n  }, []);\n\n  //Xử lý reject task\n  const rejectTask = (taskName) => {\n    dispatch(rejectTaskApi(taskName));\n  };\n\n  //Xử lý done task\n  const checkTask = (taskName) => {\n    dispatch(checkTaskApi(taskName));\n  };\n\n  //Hàm xử lý xóa task\n  const delTask = (taskName) => {\n    dispatch(deleteTaskApi(taskName));\n  };\n\n  const renderTaskToDo = () => {\n    return taskList\n      .filter((item) => !item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  checkTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-check-circle\" />\n                <i className=\"fas fa-check-circle\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  const renderTaskToDoDone = () => {\n    return taskList\n      .filter((item) => item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  rejectTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-undo\" />\n                <i className=\"fas fa-undo\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n        <img src={require(\"./bg.png\")} />\n      </div>\n      {/* <h2>hello!</h2> */}\n      <form className=\"card__body\" onSubmit={addTask}>\n        <div className=\"card__content\">\n          <div className=\"card__title\">\n            <h2>My Tasks</h2>\n            <p>September 9,2020</p>\n          </div>\n          <div className=\"card__add\">\n            <input\n              id=\"newTask\"\n              name=\"taskName\"\n              type=\"text\"\n              placeholder=\"Enter an activity...\"\n              onChange={handleChange}\n            />\n            <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n              <i className=\"fa fa-plus\" />\n            </button>\n          </div>\n          <div className=\"card__todo\">\n            {/* Uncompleted tasks */}\n            <ul className=\"todo\" id=\"todo\">\n              {renderTaskToDo()}\n            </ul>\n            {/* Completed tasks */}\n            <ul className=\"todo\" id=\"completed\">\n              {renderTaskToDoDone()}\n            </ul>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nexport default function TodolistRFC(props) {\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            setState({\n                ...state,\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nexport default function Header() {\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/demohocmodal\">Demo HOC </NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistredux\">To do list redux</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistsaga\">To do list saga</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/dragdrop\">DemoDragDrop</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/demo\">Demo</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/demodragdropdnd\">Drag Drop DnD</NavLink>\n                            \n                            \n                        </div>\n                    </li>\n\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n\n    )\n}\n\n\n\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"../../components/Home/Header/Header\";\n\nexport const HomeTemplate = (props) => {\n  const { Component, ...restParam } = props;\n  return (\n    <Route\n      {...restParam}\n      render={(propsRoute) => {\n        return (\n          <>\n            <Header />\n            <Component {...propsRoute} />\n          </>\n        );\n      }}\n    />\n  );\n};\n","import React,{useState,useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport { Button,Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\n\n\n\n\n\nexport const UserLoginTemplate = (props) => {\n\n    const [{width,height},setSize] = useState({width:Math.round(window.innerWidth),height:Math.round(window.innerHeight)});\n\n    useEffect(()=>{\n        window.onresize = () => {\n            setSize({\n                width: Math.round(window.innerWidth),\n                height:Math.round(window.innerHeight)\n            })\n        }\n    },[])\n\n\n    let {Component,...restRoute} =  props;\n\n    return <Route {...restRoute} render={(propsRoute)=>{\n        return <>\n            <Layout>\n                <Sider width={width/2} style={{height:height,backgroundImage:`url(https://picsum.photos/${Math.round(width/2)}/${height})`,backgroundSize:'100%'}}>\n                  \n                </Sider>\n                <Content>\n                    <Component {...propsRoute} />\n                </Content>\n            </Layout>\n      \n        </>\n    }} />\n\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { UserOutlined } from \"@ant-design/icons\";\nexport default function MenuCyberbugs() {\n  return (\n    <div className=\"menu\">\n      <div className=\"account\">\n        <div className=\"avatar\">\n          <img src={require(\"../../assets/img/download.jfif\")} alt=\"123\" />\n        </div>\n        <div className=\"account-info\">\n          <p>CyberLearn.vn</p>\n          <p>Report bugs</p>\n        </div>\n      </div>\n      <div className=\"control\">\n        <div>\n          <i className=\"fa fa-credit-card mr-1\" />\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/cyberbugs\"\n            activeClassName=\"active font-weight-bold text-primary\"\n          >\n            Cyber Board\n          </NavLink>\n        </div>\n        <div>\n          <i className=\"fa fa-cog mr-1\" />\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/projectmanagement\"\n            activeClassName=\"active font-weight-bold  text-primary\"\n          >\n            Project management\n          </NavLink>\n        </div>\n        <div>\n          <i className=\"fa fa-cog mr-1\" />\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/createproject\"\n            activeClassName=\"active font-weight-bold  text-primary\"\n          >\n            Create project\n          </NavLink>\n        </div>\n\n        <div>\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/users\"\n            activeClassName=\"active font-weight-bold  text-primary\"\n          >\n            <i className=\"fa fa-user\" /> <span>Users</span>\n          </NavLink>\n        </div>\n      </div>\n      <div className=\"feature\">\n        {/* <div>\n                    <i className=\"fa fa-equals mr-1\" />\n                    <span>Issues and filters</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-paste mr-1\" />\n                    <span>Pages</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-location-arrow mr-1\" />\n                    <span>Reports</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-box\" />\n                    <span>Components</span>\n                </div> */}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { GET_ALL_STATUS_SAGA } from \"../../../redux/constants/Cyberbugs/StatusConstant\";\nimport { GET_ALL_PRIORITY_SAGA } from \"../../../redux/constants/Cyberbugs/PriorityConstants\";\nimport {\n  CHANGE_ASSIGNESS,\n  CHANGE_TASK_MODAL,\n  HANDLE_CHANGE_POST_API_SAGA,\n  REMOVE_USER_ASSIGN\n} from \"../../../redux/constants/Cyberbugs/TaskConstants\";\nimport { GET_ALL_TASK_TYPE_SAGA } from \"../../../redux/constants/Cyberbugs/TaskTypeConstants\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { Button, Form, Input, Select } from \"antd\";\nimport {\n  DELETE_COMMENT_SAGA,\n  INSERT_COMMENT_SAGA,\n  RESET_UPDATING_COMMENT,\n  SET_UPDATING_COMMENT,\n  UPDATE_COMMENT_SAGA\n} from \"../../../redux/constants/Cyberbugs/CommentConstants\";\nimport _ from \"lodash\";\n\nimport { useFormik } from \"formik\";\n\nexport default function ModalCyberBugs(props) {\n  const { taskDetailModal } = useSelector((state) => state.TaskReducer);\n\n  const { arrStatus } = useSelector((state) => state.StatusReducer);\n  const { arrPriority } = useSelector((state) => state.PriorityReducer);\n  const { arrTaskType } = useSelector((state) => state.TaskTypeReducer);\n\n  const { projectDetail } = useSelector((state) => state.ProjectReducer);\n\n  const { updatingComment } = useSelector((state) => state.CommentReducer);\n\n  const [visibleEditor, setVisibleEditor] = useState(false);\n  const [historyContent, setHistoryContent] = useState(\n    taskDetailModal.description\n  );\n  const [content, setContent] = useState(taskDetailModal.description);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: GET_ALL_STATUS_SAGA });\n    dispatch({ type: GET_ALL_PRIORITY_SAGA });\n    dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\n  }, []);\n\n  const renderDescription = () => {\n    const jsxDescription = ReactHtmlParser(taskDetailModal.description);\n    return (\n      <div>\n        {visibleEditor ? (\n          <div>\n            {\" \"}\n            <Editor\n              name=\"description\"\n              initialValue={taskDetailModal.description}\n              init={{\n                selector: \"textarea#myTextArea\",\n                height: 500,\n                menubar: false,\n                plugins: [\n                  \"advlist autolink lists link image charmap print preview anchor\",\n                  \"searchreplace visualblocks code fullscreen\",\n                  \"insertdatetime media table paste code help wordcount\"\n                ],\n                toolbar:\n                  \"undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help\"\n              }}\n              onEditorChange={(content, editor) => {\n                setContent(content);\n              }}\n            />\n            <button\n              className=\"btn btn-primary m-2\"\n              onClick={() => {\n                dispatch({\n                  type: HANDLE_CHANGE_POST_API_SAGA,\n                  actionType: CHANGE_TASK_MODAL,\n                  name: \"description\",\n                  value: content\n                });\n                setVisibleEditor(false);\n              }}\n            >\n              Save\n            </button>\n            <button\n              className=\"btn btn-primary m-2\"\n              onClick={() => {\n                dispatch({\n                  type: HANDLE_CHANGE_POST_API_SAGA,\n                  actionType: CHANGE_TASK_MODAL,\n                  name: \"description\",\n                  value: historyContent\n                });\n\n                setVisibleEditor(false);\n              }}\n            >\n              Close\n            </button>\n          </div>\n        ) : (\n          <div\n            onClick={() => {\n              setHistoryContent(taskDetailModal.description);\n              setVisibleEditor(!visibleEditor);\n            }}\n          >\n            {jsxDescription}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    dispatch({\n      type: HANDLE_CHANGE_POST_API_SAGA,\n      actionType: CHANGE_TASK_MODAL,\n      name,\n      value\n    });\n  };\n\n  const renderTimeTracking = () => {\n    const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\n\n    const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\n    const percent = Math.round((Number(timeTrackingSpent) / max) * 100);\n\n    return (\n      <div>\n        <div style={{ display: \"flex\" }}>\n          <i className=\"fa fa-clock\" />\n          <div style={{ width: \"100%\" }}>\n            <div className=\"progress\">\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                style={{ width: `${percent}%` }}\n                aria-valuenow={Number(timeTrackingSpent)}\n                aria-valuemin={Number(timeTrackingRemaining)}\n                aria-valuemax={max}\n              />\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <p className=\"logged\">{Number(timeTrackingRemaining)}h logged</p>\n              <p className=\"estimate-time\">\n                {Number(timeTrackingRemaining)}h remaining\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <input\n              className=\"form-control\"\n              name=\"timeTrackingSpent\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-6\">\n            <input\n              className=\"form-control\"\n              name=\"timeTrackingRemaining\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      id: updatingComment.id,\n      contentComment: updatingComment.commentContent\n    },\n\n    onSubmit: (values) => {\n      if (_.isEqual(updatingComment, {})) {\n        let commentDetail = {\n          taskId: taskDetailModal.taskId,\n          contentComment: values.contentComment\n        };\n\n        dispatch({\n          type: INSERT_COMMENT_SAGA,\n          commentDetail\n        });\n      } else {\n        dispatch({\n          type: UPDATE_COMMENT_SAGA,\n          commentId: values.id,\n          newCommentContent: values.contentComment\n        });\n      }\n\n      formik.setFieldValue(\"contentComment\", \"\");\n    }\n  });\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"infoModal\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"infoModal\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog modal-info\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <div className=\"task-title\">\n              <i className=\"fa fa-bookmark\" />\n              <select\n                name=\"typeId\"\n                value={taskDetailModal.typeId}\n                onChange={handleChange}\n              >\n                {arrTaskType.map((tp, index) => {\n                  return (\n                    <option key={index} value={tp.id}>\n                      {tp.taskType}\n                    </option>\n                  );\n                })}\n              </select>\n\n              <span>{taskDetailModal.taskName}</span>\n            </div>\n            <div style={{ display: \"flex\" }} className=\"task-click\">\n              <div>\n                <i className=\"fab fa-telegram-plane\" />\n                <span style={{ paddingRight: 20 }}>Give feedback</span>\n              </div>\n              <div>\n                <i className=\"fa fa-link\" />\n                <span style={{ paddingRight: 20 }}>Copy link</span>\n              </div>\n              <i\n                className=\"fa fa-trash-alt='xyz'\"\n                style={{ cursor: \"pointer\" }}\n              />\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-8\">\n                  <p className=\"issue\">This is an issue of type: Task.</p>\n                  <div className=\"description\">\n                    <p>Description</p>\n                    {renderDescription()}\n                  </div>\n                  <div className=\"comment\">\n                    <h6>Comment</h6>\n                    <div className=\"block-comment\" style={{ display: \"flex\" }}>\n                      <div className=\"avatar\">\n                        <img\n                          src={require(\"../../../assets/img/download (1).jfif\")}\n                          alt=\"xyz\"\n                        />\n                      </div>\n                      <div className=\"input-comment\">\n                        <Form onSubmitCapture={formik.handleSubmit}>\n                          <Input\n                            name=\"contentComment\"\n                            placeholder=\"Add comment...\"\n                            allowClear={true}\n                            value={formik.values.contentComment}\n                            onChange={formik.handleChange}\n                          />\n                          {_.isEqual(updatingComment, {}) ? (\n                            <Button htmlType=\"submit\">Comment</Button>\n                          ) : (\n                            \"\"\n                          )}\n                          {!_.isEqual(updatingComment, {}) ? (\n                            <div>\n                              <Button htmlType=\"submit\">Save</Button>\n                              <Button\n                                onClick={() => {\n                                  dispatch({ type: RESET_UPDATING_COMMENT });\n                                }}\n                              >\n                                Cancel\n                              </Button>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n                        </Form>\n                        <p></p>\n                      </div>\n                    </div>\n                    <div className=\"lastest-comment\">\n                      {taskDetailModal.lstComment.map((comment, index) => {\n                        return (\n                          <div className=\"comment-item my-2\" key={index}>\n                            <div\n                              className=\"display-comment\"\n                              style={{ display: \"flex\" }}\n                            >\n                              <div className=\"avatar\">\n                                <img src={comment.avatar} alt=\"xyz\" />\n                              </div>\n                              <div>\n                                <p style={{ marginBottom: 5 }}>\n                                  {comment.commentContent}\n                                </p>\n\n                                <div>\n                                  <span\n                                    className=\"mr-1\"\n                                    style={{\n                                      color: \"#929398\",\n                                      cursor: \"pointer\"\n                                    }}\n                                    onClick={() => {\n                                      dispatch({\n                                        type: SET_UPDATING_COMMENT,\n                                        updatingComment: comment\n                                      });\n                                    }}\n                                  >\n                                    Edit\n                                  </span>\n\n                                  <span\n                                    style={{\n                                      color: \"#929398\",\n                                      cursor: \"pointer\"\n                                    }}\n                                    onClick={() => {\n                                      dispatch({\n                                        type: DELETE_COMMENT_SAGA,\n                                        commentId: comment.id\n                                      });\n                                    }}\n                                  >\n                                    Delete\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-4\">\n                  <div className=\"status\">\n                    <h6>STATUS</h6>\n\n                    <select\n                      name=\"statusId\"\n                      className=\"custom-select\"\n                      value={taskDetailModal.statusId}\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                    >\n                      {arrStatus.map((status, index) => {\n                        return (\n                          <option value={status.statusId} key={index}>\n                            {status.statusName}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                  <div className=\"assignees\">\n                    <h6>ASSIGNEES</h6>\n                    <div className=\"row\">\n                      {taskDetailModal.assigness?.map((user, index) => {\n                        return (\n                          <div className=\"col-6  mt-2 mb-2\" key={index}>\n                            <div\n                              key={index}\n                              style={{ display: \"flex\" }}\n                              className=\"item\"\n                            >\n                              <div className=\"avatar\">\n                                <img src={user.avatar} alt={user.avatar} />\n                              </div>\n                              <p className=\"name mt-1 ml-1\">\n                                {user.name}\n                                <i\n                                  className=\"fa fa-times\"\n                                  style={{ marginLeft: 5, cursor: \"pointer\" }}\n                                  onClick={() => {\n                                    dispatch({\n                                      type: HANDLE_CHANGE_POST_API_SAGA,\n                                      actionType: REMOVE_USER_ASSIGN,\n                                      userId: user.id\n                                    });\n                                  }}\n                                />\n                              </p>\n                            </div>\n                          </div>\n                        );\n                      })}\n\n                      <div className=\"col-6  mt-2 mb-2\">\n                        <Select\n                          options={projectDetail.members\n                            ?.filter((mem) => {\n                              let index = taskDetailModal.assigness?.findIndex(\n                                (us) => us.id === mem.userId\n                              );\n                              if (index !== -1) {\n                                return false;\n                              }\n                              return true;\n                            })\n                            .map((mem, index) => {\n                              return { value: mem.userId, label: mem.name };\n                            })}\n                          optionFilterProp=\"label\"\n                          style={{ width: \"100%\" }}\n                          name=\"lstUser\"\n                          value=\"+ Add more\"\n                          className=\"form-control\"\n                          onSelect={(value) => {\n                            if (value == \"0\") {\n                              return;\n                            }\n                            let userSelected = projectDetail.members.find(\n                              (mem) => mem.userId == value\n                            );\n                            userSelected = {\n                              ...userSelected,\n                              id: userSelected.userId\n                            };\n\n                            dispatch({\n                              type: HANDLE_CHANGE_POST_API_SAGA,\n                              actionType: CHANGE_ASSIGNESS,\n                              userSelected\n                            });\n                          }}\n                        ></Select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"priority\" style={{ marginBottom: 20 }}>\n                    <h6>PRIORITY</h6>\n                    <select\n                      name=\"priorityId\"\n                      className=\"form-control\"\n                      value={taskDetailModal.priorityId}\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                    >\n                      {arrPriority.map((item, index) => {\n                        return (\n                          <option key={index} value={item.priorityId}>\n                            {item.priority}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                  <div className=\"estimate\">\n                    <h6>ORIGINAL ESTIMATE (HOURS)</h6>\n                    <input\n                      name=\"originalEstimate\"\n                      type=\"text\"\n                      className=\"estimate-hours\"\n                      value={taskDetailModal.originalEstimate}\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                    />\n                  </div>\n                  <div className=\"time-tracking\">\n                    <h6>TIME TRACKING</h6>\n                    {renderTimeTracking()}\n                  </div>\n                  <div style={{ color: \"#929398\" }}>Create at a month ago</div>\n                  <div style={{ color: \"#929398\" }}>\n                    Update at a few seconds ago\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const GET_ALL_STATUS_SAGA = 'GET_ALL_STATUS_SAGA';\nexport const GET_ALL_STATUS = 'GET_ALL_STATUS';","export const GET_ALL_PRIORITY = 'GET_ALL_PRIORITY';\nexport const GET_ALL_PRIORITY_SAGA = 'GET_ALL_PRIORITY_SAGA';","export const GET_ALL_TASK_TYPE = 'GET_ALL_TASK_TYPE';\nexport const GET_ALL_TASK_TYPE_SAGA = 'GET_ALL_TASK_TYPE_SAGA';","export const GET_TASK_DETAIL_SAGA = 'GET_TASK_DETAIL_SAGA';\nexport const GET_TASK_DETAIL = 'GET_TASK_DETAIL';\n\n\nexport const CHANGE_TASK_MODAL = 'CHANGE_TASK_MODAL';\nexport const CHANGE_ASSIGNESS = 'CHANGE_ASSIGNESS';\nexport const REMOVE_USER_ASSIGN = 'REMOVE_USER_ASSIGN'\n\nexport const UPDATE_STATUS_TASK_SAGA = 'UPDATE_STATUS_TASK_SAGA';\n\n\nexport const UPDATE_TASK_SAGA = 'UPDATE_TASK_SAGA';\nexport const HANDLE_CHANGE_POST_API_SAGA = 'HANDLE_CHANGE_POST_API_SAGA';","export const INSERT_COMMENT_SAGA = \"INSERT_COMMENT_SAGA\";\nexport const DELETE_COMMENT_SAGA = \"DELETE_COMMENT_SAGA\";\nexport const UPDATE_COMMENT_SAGA = \"UPDATE_COMMENT_SAGA\";\nexport const SET_UPDATING_COMMENT = \"SET_UPDATING_COMMENT\";\nexport const RESET_UPDATING_COMMENT = \"RESET_UPDATING_COMMENT\";\n","import { Editor } from '@tinymce/tinymce-react'\nimport React, { useEffect, useState } from 'react'\nimport { Select, Radio,Slider } from 'antd';\nimport {useSelector,useDispatch,connect} from 'react-redux'\nimport { GET_ALL_PROJECT_SAGA } from '../../../redux/constants/Cyberbugs/ProjectCyberBugsConstants';\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\n\nimport {withFormik} from 'formik';\n\nimport * as Yup from 'yup'\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/constants/Cyberbugs/StatusConstant';\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../../redux/constants/Cyberbugs/UserConstatnts';\nconst { Option } = Select;\n\nconst children = [];\n\nfor (let i = 10; i < 36; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n function FormCreateTask(props) {\n\n    //Lấy dữ liệu từ redux \n    const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\n    const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\n    const {arrPriority} = useSelector(state => state.PriorityReducer);\n    const {arrUser} = useSelector(state => state.UserLoginCyberBugsReducer);\n    const {arrStatus} = useSelector(state => state.StatusReducer);\n\n    console.log('arrStatus',arrStatus);\n    //Hàm biến đổi options cho thẻ select\n    const userOptions = arrUser.map((item,index) => {\n        return {value:item.userId,label:item.name}\n    })\n    //Do kết nối với withformik => component có các props\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    const dispatch = useDispatch();\n\n\n \n    \n    const [size, setSize] = React.useState('default');\n\n    const [timeTracking,setTimetracking] = useState({\n        timeTrackingSpent:0,\n        timeTrackingRemaining:0\n    })\n\n\n\n    //hook\n    useEffect(() => {\n        dispatch({type:GET_ALL_PROJECT_SAGA});\n        dispatch({type:GET_ALL_TASK_TYPE_SAGA});\n        dispatch({type:GET_ALL_PRIORITY_SAGA});\n        dispatch({type:GET_ALL_STATUS_SAGA});\n        //Đưa hàm handle submit lên drawer reducer để cập nhật lại sự kiện cho nút submitt\n        dispatch({type:'SET_SUBMIT_CREATE_TASK',submitFunction:handleSubmit})\n\n        dispatch({type:'GET_USER_API',keyWord:''});\n\n    },[])\n\n    \n    \n\n    const children = [];\n    return (\n        <form className=\"container\" onSubmit={handleSubmit}>          \n            <div className=\"form-group\">\n                <p>Project</p>\n                <select  name=\"projectId\" className=\"form-control\" onChange={(e) => {\n\n                    //dispatch giá trị làm thay đổi arrUser\n                    let {value} = e.target;\n                    dispatch({\n                        type:GET_USER_BY_PROJECT_ID_SAGA,\n                        idProject:value\n                    })\n                    //Cập nhật giá trị cho project Id\n                    setFieldValue('projectId',e.target.value);\n\n\n                }}>\n                   {arrProject.map((project,index)=>{\n                       return <option key={index} value={project.id}>{project.projectName}</option>\n                   })}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <p>Task name</p>\n                <input name=\"taskName\" className=\"form-control\" onChange={handleChange} />\n            </div> \n            <div className=\"form-group\">\n                <p>Status</p>\n                <select name=\"statusId\" className=\"form-control\" onChange={handleChange}>\n                    {arrStatus.map((statusItem,index) => {\n                        return <option key={index} value={statusItem.statusId}>{statusItem.statusName}</option>\n                    })}\n                </select>\n            </div> \n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <p>Priority</p>\n                        <select name=\"priorityId\" className=\"form-control\" onChange={handleChange}>\n                            {arrPriority.map((priority,index)=>{\n                                return <option key={index} value={priority.priorityId}>\n                                    {priority.priority}\n                                </option>\n                            })}\n                        </select>\n                    </div>\n                    <div className=\"col-6\">\n                        <p>Task type</p>\n                        <select className=\"form-control\" name=\"typeId\" onChange={handleChange}>\n                            {arrTaskType.map((taskType,index)=>{\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n                \n            </div>\n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                    <p>Assignees</p>\n                    <Select\n                            \n                            mode=\"multiple\"\n                            size={size}\n                            options={userOptions}\n                            placeholder=\"Please select\"\n                            optionFilterProp=\"label\"\n                            onChange={(values) => {\n                                //set lại giá trị cho lstUserAsign\n                                setFieldValue('listUserAsign',values);\n                            }}\n                            onSelect={(value) => { \n\n                              console.log(value)\n                        \n                            }}\n                            style={{ width: '100%' }}\n                        >\n                            {children}\n                    </Select>\n                    <div className=\"row mt-3\">\n                        <div className=\"col-12\">\n                            <p>Original Estimate</p>\n                            <input type=\"number\" min=\"0\" name=\"originalEstimate\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange={handleChange}/>\n                        </div>\n                    </div>\n\n                    </div>\n                    <div className=\"col-6\">\n                         <p>Time tracking</p>\n\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />\n                        <div className=\"row\">\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h remaining</div>\n                        </div>\n                        <div className=\"row\" style={{marginTop:5}}>\n                            <div className=\"col-6\">\n                                <p>Time spent</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingSpent\" onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingSpent:e.target.value\n                                    });\n\n                                    setFieldValue('timeTrackingSpent',e.target.value);\n                                }}/>\n                            </div>\n\n                            <div className=\"col-6\">\n                                <p>Time remaining</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\"  onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingRemaining:e.target.value\n                                    });\n                                    setFieldValue('timeTrackingRemaining',e.target.value);\n\n                                }}/>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <p>Description</p>\n                <Editor\n                    name=\"description\"\n                    init={{\n                        selector: 'textarea#myTextArea',\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={(content, editor) => {\n                            setFieldValue('description',content);\n                        }}\n                />\n            </div>\n            {/* <button type=\"submit\">submit</button> */}\n        </form>\n    )\n}\n\n\n\n\n\nconst frmCreateTask = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        const {arrProject,arrTaskType,arrPriority,arrStatus} = props;\n\n\n        // if(arrProject?.length>0){\n        //     props.dispatch({type:GET_USER_BY_PROJECT_ID_SAGA,idProject:arrProject[0]?.id});\n        // }\n\n\n        return {\n            taskName: '',\n            description: '',\n            statusId: arrStatus[0]?.statusId,\n            originalEstimate: 0,\n            timeTrackingSpent:0,\n            timeTrackingRemaining:0,\n            projectId:arrProject[0]?.id,\n            typeId:arrTaskType[0]?.id,\n            priorityId:arrPriority[0]?.priorityId,\n            listUserAsign:[]\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n        props.dispatch({type:'CREATE_TASK_SAGA',taskObject:values})\n        console.log('taskobject',values)\n    },\n    displayName: 'createTaskForm',\n})(FormCreateTask);\n\n// const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\n// const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\n// const {arrPriority} = useSelector(state => state.PriorityReducer);\n// const {userSearch} = useSelector(state => state.UserLoginCyberBugsReducer);\n// const {arrStatus} = useSelector(state => state.StatusReducer);\nconst mapStateToProps = (state) => {\n    return {\n        arrProject: state.ProjectCyberBugsReducer.arrProject,\n        arrTaskType:state.TaskTypeReducer.arrTaskType,\n        arrPriority:state.PriorityReducer.arrPriority,\n        arrStatus:state.StatusReducer.arrStatus,\n    }\n}\n\n\nexport default connect(mapStateToProps) (frmCreateTask);\n","export const GET_ALL_PROJECT = 'GET_ALL_PROJECT';\nexport const GET_ALL_PROJECT_SAGA = 'GET_ALL_PROJECT_SAGA';\n","export const GET_USER_BY_PROJECT_ID_SAGA = \"GET_USER_BY_PROJECT_ID_SAGA\";\nexport const GET_USER_BY_PROJECT_ID = \"GET_USER_BY_PROJECT_ID\";\n\nexport const DELETE_USER_SAGA = \"DELETE_USER_SAGA\";\nexport const EDIT_USER_SAGA = \"EDIT_USER_SAGA\";\nexport const ADD_USER_SAGA = \"ADD_USER_SAGA\";\n","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n    BarsOutlined,\n    SearchOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\n\nimport {useDispatch,useSelector} from 'react-redux'\nimport FormCreateTask from '../Forms/FormCreateTask/FormCreateTask';\n\nconst { Header, Sider, Content } = Layout;\nexport default function SidebarCyberbugs() {\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        collapsed: false,\n    })\n    const toggle = () => {\n        setState({\n            collapsed: !state.collapsed,\n        });\n    };\n    return (\n        <div>\n\n            <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '100%' }}>\n                <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\n\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />} onClick={()=>{\n                        dispatch({\n                            type:'OPEN_FORM_CREATE_TASK',\n                            Component:<FormCreateTask />,\n                            title:'Create task'\n                        })\n\n                    }}>\n                        <span className=\"mb-2\">Create task</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\n                        Search\n                     </Menu.Item>\n\n                </Menu>\n            </Sider>\n        </div>\n\n\n    )\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport MenuCyberbugs from \"../../components/Cyberbugs/MenuCyberbugs\";\nimport ModalCyberBugs from \"../../components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs\";\nimport SidebarCyberbugs from \"../../components/Cyberbugs/SidebarCyberbugs\";\n\nimport \"../../index.css\";\n\nexport const CyberbugsTemplate = (props) => {\n  const { Component, ...restParam } = props;\n  return (\n    <Route\n      {...restParam}\n      render={(propsRoute) => {\n        return (\n          <>\n            <div className=\"jira\">\n              <SidebarCyberbugs />\n              <MenuCyberbugs />\n              <Component {...propsRoute} />\n              <ModalCyberBugs {...propsRoute} />\n            </div>\n          </>\n        );\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  GET_TASK_DETAIL_SAGA,\n  UPDATE_STATUS_TASK_SAGA\n} from \"../../../redux/constants/Cyberbugs/TaskConstants\";\nexport default function ContentMain(props) {\n  const { projectDetail } = props;\n  const dispatch = useDispatch();\n\n  const handleDragEnd = (result) => {\n    let { projectId, taskId } = JSON.parse(result.draggableId);\n\n    let { source, destination } = result;\n    if (!result.destination) {\n      return;\n    }\n    if (\n      source.index === destination.index &&\n      source.droppableId === destination.droppableId\n    ) {\n      return;\n    }\n\n    dispatch({\n      type: UPDATE_STATUS_TASK_SAGA,\n      taskUpdateStatus: {\n        taskId: taskId,\n        statusId: destination.droppableId,\n        projectId: projectId\n      }\n    });\n  };\n\n  const renderCardTaskList = () => {\n    return (\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {projectDetail.lstTask?.map((taskListDetail, index) => {\n          return (\n            <Droppable key={index} droppableId={taskListDetail.statusId}>\n              {(provided) => {\n                return (\n                  <div\n                    className=\"card pb-2\"\n                    style={{ width: \"17rem\", height: \"auto\" }}\n                  >\n                    <div className=\"card-header\">\n                      {taskListDetail.statusName}\n                    </div>\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      key={index}\n                      className=\"list-group list-group-flush\"\n                      style={{ height: \"100%\" }}\n                    >\n                      {taskListDetail.lstTaskDeTail.map((task, index) => {\n                        return (\n                          <Draggable\n                            key={task.taskId.toString()}\n                            index={index}\n                            draggableId={JSON.stringify({\n                              projectId: task.projectId,\n                              taskId: task.taskId\n                            })}\n                          >\n                            {(provided) => {\n                              return (\n                                <div\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  key={index}\n                                  className=\"list-group-item\"\n                                  data-toggle=\"modal\"\n                                  data-target=\"#infoModal\"\n                                  onClick={() => {\n                                    dispatch({\n                                      type: GET_TASK_DETAIL_SAGA,\n                                      taskId: task.taskId\n                                    });\n                                  }}\n                                >\n                                  <p className=\"font-weight-300\">\n                                    {task.taskName}\n                                  </p>\n                                  <div\n                                    className=\"block\"\n                                    style={{ display: \"flex\" }}\n                                  >\n                                    <div className=\"block-left\">\n                                      <p className=\"text-danger\">\n                                        {task.priorityTask.priority}\n                                      </p>\n                                    </div>\n                                    <div className=\"block-right\">\n                                      <div\n                                        className=\"avatar-group\"\n                                        style={{ display: \"flex\" }}\n                                      >\n                                        {task.assigness.map((mem, index) => {\n                                          return (\n                                            <div className=\"avatar\" key={index}>\n                                              <img\n                                                src={mem.avatar}\n                                                alt={mem.avatar}\n                                              />\n                                            </div>\n                                          );\n                                        })}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              );\n                            }}\n                          </Draggable>\n                        );\n                      })}\n\n                      {provided.placeholder}\n                    </div>\n                  </div>\n                );\n              }}\n            </Droppable>\n          );\n        })}\n      </DragDropContext>\n    );\n  };\n\n  return (\n    <div className=\"content\" style={{ display: \"flex\" }}>\n      {renderCardTaskList()}\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function HeaderMain(props) {\n\n    const {projectDetail} = props;\n\n    return (\n        <div className=\"header\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\" style={{ backgroundColor: 'white' }}>\n                    <li className=\"breadcrumb-item\">Project</li>\n                    <li className=\"breadcrumb-item\">CyberLearn</li>\n                    <li className=\"breadcrumb-item\">Project management</li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        {projectDetail.projectName}\n                    </li>\n                </ol>\n            </nav>\n            \n\n        </div>\n\n\n    )\n}\n","import React from 'react'\nimport ReactHtmlParser from \"react-html-parser\";\n\n\nexport default function InfoMain(props) {\n\n    const {projectDetail} = props;\n\n    const renderAvatar = () => {\n        \n        \n        return projectDetail.members?.map((user,index) => {\n            return   <div key={index} className=\"avatar\">\n            <img src={user.avatar} alt={user.avatar} />\n        </div>\n        })\n    }\n\n\n    return (\n        <>\n            <h3>{projectDetail.projectName}</h3>\n\n            <section>\n                {ReactHtmlParser(projectDetail.description)}\n            </section>\n            <div className=\"info\" style={{ display: 'flex' }}>\n                <div className=\"search-block\">\n                    <input className=\"search\" />\n                    <i className=\"fa fa-search\" />\n                </div>\n                <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                    {renderAvatar()}\n                </div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Only My Issues</div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Recently Updated</div>\n            </div>\n        </>\n\n    )\n}\n","import React, { useEffect } from \"react\";\nimport ContentMain from \"../../../components/Cyberbugs/Main/ContentMain\";\nimport HeaderMain from \"../../../components/Cyberbugs/Main/HeaderMain\";\nimport InfoMain from \"../../../components/Cyberbugs/Main/InfoMain\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function IndexCyberBugs(props) {\n  const { projectDetail } = useSelector((state) => state.ProjectReducer);\n  const dispatch = useDispatch();\n\n  // console.log('projectDetail',projectDetail)\n\n  useEffect(() => {\n    //Khi người dùng link qua trang này bằng thẻ navlink hoặc người dùng tự gõ url thì ta sẽ lấy tham số từ url => gọi saga\n    const { projectId } = props.match.params;\n    dispatch({\n      type: \"GET_PROJECT_DETAIL\",\n      projectId\n    });\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <HeaderMain projectDetail={projectDetail} />\n\n      <InfoMain projectDetail={projectDetail} />\n\n      <ContentMain projectDetail={projectDetail} />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\n\nfunction CreateProject(props) {\n  useEffect(() => {\n    dispatch({ type: \"GET_ALL_PROJECT_CATEGORY_SAGA\" });\n  }, []);\n\n  const handleEditorChange = (content, editor) => {\n    setFieldValue(\"description\", content);\n  };\n  const arrProjectCategory = useSelector(\n    (state) => state.ProjectCategoryReducer.arrProjectCategory\n  );\n  const dispatch = useDispatch();\n\n  const { handleChange, handleSubmit, setFieldValue } = props;\n\n  return (\n    <div className=\"container m-5\">\n      <h3>CreateProject</h3>\n      <form\n        className=\"container\"\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n      >\n        <div className=\"form-group\">\n          <p>Name</p>\n          <input className=\"form-control\" name=\"projectName\" />\n        </div>\n        <div className=\"form-group\">\n          <p>Description</p>\n          <Editor\n            name=\"description\"\n            init={{\n              selector: \"textarea#myTextArea\",\n\n              height: 500,\n              menubar: false,\n              plugins: [\n                \"advlist autolink lists link image charmap print preview anchor\",\n                \"searchreplace visualblocks code fullscreen\",\n                \"insertdatetime media table paste code help wordcount\"\n              ],\n              toolbar:\n                \"undo redo | formatselect | bold italic backcolor | \\\n                                alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help\"\n            }}\n            onEditorChange={handleEditorChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <select\n            name=\"categoryId\"\n            className=\"form-control\"\n            onChange={handleChange}\n          >\n            {arrProjectCategory.map((item, index) => {\n              return (\n                <option value={item.id} key={index}>\n                  {item.projectCategoryName}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <button className=\"btn btn-outline-primary\" type=\"submit\">\n          Create project\n        </button>\n      </form>\n    </div>\n  );\n}\n\nconst createProjectForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: (props) => {\n    return {\n      projectName: \"\",\n      description: \"\",\n      categoryId: props.arrProjectCategory[0]?.id\n    };\n  },\n  validationSchema: Yup.object().shape({}),\n  handleSubmit: (values, { props, setSubmitting }) => {\n    props.dispatch({\n      type: \"CREATE_PROJECT_SAGA\",\n      newProject: values\n    });\n  },\n  displayName: \"CreateProjectFormik\"\n})(CreateProject);\n\nconst mapStateToProps = (state) => ({\n  arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\n});\n\nexport default connect(mapStateToProps)(createProjectForm);\n","import { Editor } from \"@tinymce/tinymce-react\";\nimport { withFormik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\n\nfunction FormEditProject(props) {\n  const arrProjectCategory = useSelector(\n    (state) => state.ProjectCategoryReducer.arrProjectCategory\n  );\n  const dispatch = useDispatch();\n\n  const { values, handleChange, handleSubmit, setFieldValue } = props;\n\n  useEffect(() => {\n    dispatch({ type: \"GET_ALL_PROJECT_CATEGORY_SAGA\" });\n\n    dispatch({ type: \"SET_SUBMIT_EDIT_PROJECT\", submitFunction: handleSubmit });\n  }, []);\n\n  const handleEditorChange = (content, editor) => {\n    setFieldValue(\"description\", content);\n  };\n\n  return (\n    <form className=\"container-fuild\" onSubmit={handleSubmit}>\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <div className=\"form-group\">\n            <p className=\"font-weight-bold\">Project id</p>\n            <input\n              value={values.id}\n              disabled\n              className=\"form-control\"\n              name=\"id\"\n            />\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div className=\"form-group\">\n            <p className=\"font-weight-bold\">Project name</p>\n            <input\n              value={values.projectName}\n              className=\"form-control\"\n              name=\"projectName\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div className=\"form-group\">\n            <p className=\"font-weight-bold\">Project Category</p>\n            <select\n              className=\"form-control\"\n              name=\"categoryId\"\n              value={values.categoryId}\n            >\n              {arrProjectCategory?.map((item, index) => {\n                return (\n                  <option key={index} value={item.id}>\n                    {item.projectCategoryName}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"form-group\">\n            <p className=\"font-weight-bold\">Description</p>\n            <Editor\n              name=\"description123\"\n              initialValue={values.description}\n              value={values.description}\n              init={{\n                selector: \"textarea#myTextArea\",\n                height: 500,\n\n                menubar: false,\n                plugins: [\n                  \"advlist autolink lists link image charmap print preview anchor\",\n                  \"searchreplace visualblocks code fullscreen\",\n                  \"insertdatetime media table paste code help wordcount\"\n                ],\n                toolbar:\n                  \"undo redo | formatselect | bold italic backcolor | \\\n        alignleft aligncenter alignright alignjustify | \\\n        bullist numlist outdent indent | removeformat | help\"\n              }}\n              onEditorChange={handleEditorChange}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nconst EditProjectForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: (props) => {\n    const { projectEdit } = props;\n\n    return {\n      id: projectEdit?.id,\n      projectName: projectEdit.projectName,\n      description: projectEdit.description,\n      categoryId: projectEdit.categoryId\n    };\n  },\n  validationSchema: Yup.object().shape({}),\n  handleSubmit: (values, { props, setSubmitting }) => {\n    props.dispatch({\n      type: \"UPDATE_PROJECT_SAGA\",\n      prjectUpdate: values\n    });\n  },\n  displayName: \"EditProjectForm\"\n})(FormEditProject);\n\nconst mapStateToProps = (state) => ({\n  projectEdit: state.ProjectReducer.projectEdit\n});\n\nexport default connect(mapStateToProps)(EditProjectForm);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Table,\n  Tag,\n  Space,\n  Button,\n  Avatar,\n  Popconfirm,\n  Popover,\n  AutoComplete\n} from \"antd\";\nimport { FormOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport FormEditProject from \"../../../components/Forms/FormEditProject.js/FormEditProject\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function ProjectManagement(props) {\n  //Lấy dữ liệu từ reducer về component\n  const projectList = useSelector(\n    (state) => state.ProjectCyberBugsReducer.projectList\n  );\n\n  const { userSearch } = useSelector(\n    (state) => state.UserLoginCyberBugsReducer\n  );\n\n  const [value, setValue] = useState(\"\");\n\n  const searchRef = useRef(null);\n\n  //Sử dụng useDispatch để gọi action\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    filteredInfo: null,\n    sortedInfo: null\n  });\n\n  useEffect(() => {\n    dispatch({ type: \"GET_LIST_PROJECT_SAGA\" });\n  }, []);\n\n  const handleChange = (pagination, filters, sorter) => {\n    console.log(\"Various parameters\", pagination, filters, sorter);\n    setState({\n      filteredInfo: filters,\n      sortedInfo: sorter\n    });\n  };\n\n  const clearFilters = () => {\n    setState({ filteredInfo: null });\n  };\n\n  const clearAll = () => {\n    setState({\n      filteredInfo: null,\n      sortedInfo: null\n    });\n  };\n\n  const setAgeSort = () => {\n    setState({\n      sortedInfo: {\n        order: \"descend\",\n        columnKey: \"age\"\n      }\n    });\n  };\n\n  let { sortedInfo, filteredInfo } = state;\n  sortedInfo = sortedInfo || {};\n  filteredInfo = filteredInfo || {};\n  const columns = [\n    {\n      title: \"id\",\n      dataIndex: \"id\",\n      key: \"id\",\n      sorter: (item2, item1) => {\n        return item2.id - item1.id;\n      },\n      sortDirections: [\"descend\"]\n    },\n    {\n      title: \"projectName\",\n      dataIndex: \"projectName\",\n      key: \"projectName\",\n      render: (text, record, index) => {\n        return <NavLink to={`/projectdetail/${record.id}`}> {text}</NavLink>;\n      },\n      sorter: (item2, item1) => {\n        let projectName1 = item1.projectName?.trim().toLowerCase();\n        let projectName2 = item2.projectName?.trim().toLowerCase();\n        if (projectName2 < projectName1) {\n          return -1;\n        }\n        return 1;\n      }\n    },\n    // {\n    //     title: 'description',\n    //     dataIndex: 'description',\n    //     key: 'description',\n    //     render: (text, record, index) => {\n    //         let contentJSX = ReactHtmlParser(text);\n\n    //         return <div>\n    //             {contentJSX}\n    //         </div>\n    //     }\n    // },\n\n    {\n      title: \"category\",\n      dataIndex: \"categoryName\",\n      key: \"categoryName\",\n      sorter: (item2, item1) => {\n        let categoryName1 = item1.categoryName?.trim().toLowerCase();\n        let categoryName2 = item2.categoryName?.trim().toLowerCase();\n        if (categoryName2 < categoryName1) {\n          return -1;\n        }\n        return 1;\n      }\n    },\n    {\n      title: \"creator\",\n      // dataIndex: 'creator',\n      key: \"creator\",\n      render: (text, record, index) => {\n        return <Tag color=\"green\">{record.creator?.name}</Tag>;\n      },\n      sorter: (item2, item1) => {\n        let creator1 = item1.creator?.name.trim().toLowerCase();\n        let creator2 = item2.creator?.name.trim().toLowerCase();\n        if (creator2 < creator1) {\n          return -1;\n        }\n        return 1;\n      }\n    },\n    {\n      title: \"members\",\n      key: \"members\",\n      render: (text, record, index) => {\n        return (\n          <div>\n            {record.members?.slice(0, 3).map((member, index) => {\n              return (\n                <Popover\n                  key={index}\n                  placement=\"top\"\n                  title=\"members\"\n                  content={() => {\n                    return (\n                      <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th>Id</th>\n                            <th>avatar</th>\n                            <th>name</th>\n                            <th></th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {record.members?.map((item, index) => {\n                            return (\n                              <tr key={index}>\n                                <td>{item.userId}</td>\n                                <td>\n                                  <img\n                                    src={item.avatar}\n                                    width=\"30\"\n                                    height=\"30\"\n                                    style={{ borderRadius: \"15px\" }}\n                                  />\n                                </td>\n                                <td>{item.name}</td>\n                                <td>\n                                  <button\n                                    onClick={() => {\n                                      dispatch({\n                                        type: \"REMOVE_USER_PROJECT_API\",\n                                        userProject: {\n                                          userId: item.userId,\n                                          projectId: record.id\n                                        }\n                                      });\n                                    }}\n                                    className=\"btn btn-danger\"\n                                    style={{ borderRadius: \"50%\" }}\n                                  >\n                                    X\n                                  </button>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    );\n                  }}\n                >\n                  <Avatar key={index} src={member.avatar} />\n                </Popover>\n              );\n            })}\n\n            {record.members?.length > 3 ? <Avatar>...</Avatar> : \"\"}\n\n            <Popover\n              placement=\"rightTop\"\n              title={\"Add user\"}\n              content={() => {\n                return (\n                  <AutoComplete\n                    options={userSearch?.map((user, index) => {\n                      return {\n                        label: user.name,\n                        value: user.userId.toString()\n                      };\n                    })}\n                    value={value}\n                    onChange={(text) => {\n                      setValue(text);\n                    }}\n                    onSelect={(valueSelect, option) => {\n                      //set giá trị của hộp thọa = option.label\n                      setValue(option.label);\n                      //Gọi api gửi về backend\n                      dispatch({\n                        type: \"ADD_USER_PROJECT_API\",\n                        userProject: {\n                          projectId: record.id,\n                          userId: valueSelect\n                        }\n                      });\n                    }}\n                    style={{ width: \"100%\" }}\n                    onSearch={(value) => {\n                      if (searchRef.current) {\n                        clearTimeout(searchRef.current);\n                      }\n                      searchRef.current = setTimeout(() => {\n                        dispatch({\n                          type: \"GET_USER_API\",\n                          keyWord: value\n                        });\n                      }, 300);\n                    }}\n                  />\n                );\n              }}\n              trigger=\"click\"\n            >\n              <Button style={{ borderRadius: \"50%\" }}>+</Button>\n            </Popover>\n          </div>\n        );\n      }\n    },\n\n    {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"x\",\n      render: (text, record, index) => {\n        return (\n          <div>\n            <button\n              className=\"btn mr-2 btn-primary\"\n              onClick={() => {\n                const action = {\n                  type: \"OPEN_FORM_EDIT_PROJECT\",\n                  title: \"Edit Project\",\n                  Component: <FormEditProject />\n                };\n\n                //dispatch lên reducer nội dung drawer\n                dispatch(action);\n                //dispatch dữ liệu dòng hiện tai lên reducer\n                const actionEditProject = {\n                  type: \"EDIT_PROJECT\",\n                  projectEditModel: record\n                };\n                dispatch(actionEditProject);\n              }}\n            >\n              <FormOutlined style={{ fontSize: 17 }} />\n            </button>\n            <Popconfirm\n              title=\"Are you sure to delete this project?\"\n              onConfirm={() => {\n                dispatch({ type: \"DELETE_PROJECT_SAGA\", idProject: record.id });\n              }}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <button className=\"btn btn-danger\">\n                <DeleteOutlined style={{ fontSize: 17 }} />\n              </button>\n            </Popconfirm>\n          </div>\n        );\n      }\n    }\n  ];\n  return (\n    <div className=\"container-fluid m-5\">\n      <h3>Project management</h3>\n      <Space style={{ marginBottom: 16 }}>\n        <Button onClick={setAgeSort}>Sort age</Button>\n        <Button onClick={clearFilters}>Clear filters</Button>\n        <Button onClick={clearAll}>Clear filters and sorters</Button>\n      </Space>\n      <Table\n        columns={columns}\n        rowKey={\"id\"}\n        dataSource={projectList}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Drawer, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function DrawerCyberBugs(props) {\n  const { visible, ComponentContentDrawer, callBackSubmit, title } =\n    useSelector((state) => state.drawerReducer);\n\n  const dispatch = useDispatch();\n\n  const onClose = () => {\n    dispatch({ type: \"CLOSE_DRAWER\" });\n  };\n  return (\n    <>\n      <Drawer\n        title={title}\n        width={720}\n        onClose={onClose}\n        visible={visible}\n        bodyStyle={{ paddingBottom: 80 }}\n        footer={\n          <div\n            style={{\n              textAlign: \"right\"\n            }}\n          >\n            <Button onClick={onClose} style={{ marginRight: 8 }}>\n              Cancel\n            </Button>\n            <Button onClick={callBackSubmit} type=\"primary\">\n              Submit\n            </Button>\n          </div>\n        }\n      >\n        {ComponentContentDrawer}\n      </Drawer>\n    </>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport './Demo.css';\nimport { useSpring, useSprings, animated } from 'react-spring'\n\nconst defaultValue = [\n    { id: 1, taskName: 'Task 1' },\n    { id: 2, taskName: 'Task 2' },\n    { id: 3, taskName: 'Task 3' },\n    { id: 4, taskName: 'Task 4' },\n    { id: 5, taskName: 'Task 5' },\n]\n\n\nexport default function Demo(props) {\n\n    const [taskList, setTaskList] = useState(defaultValue);\n    const tagDrag = useRef({});\n    const tagDragEnter = useRef({});\n    const [propsSpring, set, stop] = useSpring(() => ({ to: { rotate: 25, bottom: 0 }, from: { rotate: 0, bottom: -50 }, config: { duration: 250 }, reset: true }))\n\n    const handleDragStart = (e, task, index) => {\n        console.log(e.target);\n        console.log(task);\n        //Lưu lại giá trị của task đang drag\n        tagDrag.current = task;\n    }\n\n\n    const handleDragEnter = (e, taskDragEnter, index) => {\n        // console.log('dragEnterTag',e.target)\n        // console.log('targertOver',task)\n        // console.log('index',index)\n        set({ bottom: 0 })\n       \n\n        let taskListUpdate = [...taskList];\n        //Láy ra index thằng đang kéo\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\n        //Lấy ra index thằng bị kéo qua \n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\n\n        //Bién6 chứa giá trị thằng đang kéo\n        let temp = taskListUpdate[indexDragTag];\n        //Lấy giá trị tại vi trí đang kéo gán = thằng kéo qua\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\n        //Lấy thằng kéo qua gán = đang keo\n        taskListUpdate[indexDragEnter] = temp;\n\n        tagDragEnter.current = taskDragEnter;\n\n        setTaskList(taskListUpdate);\n\n\n\n    }\n\n    const handleDragEnd = (e) => {\n\n\n    }\n    const handleDrop = (e) => {\n        // console.log('drop', e.target);\n    }\n    return (\n        <div className=\"container\" onDragOver={(e) => {\n            e.stopPropagation();\n            e.preventDefault();\n        }}\n            onDrop={(e) => {\n                tagDrag.current = {}\n                setTaskList([...taskList])\n            }}\n        >\n            <div className=\"text-center display-4\">Task list</div>\n            <div className=\"row\">\n                <div className=\"col-2\"></div>\n                <div className=\"bg-dark p-5 col-4\">\n                    {taskList.map((task, index) => {\n\n                        let cssDrag = task.id === tagDrag.current.id ? 'tagDrag' : ''\n                        let cssDragEnter = tagDragEnter.current.id == task.id ? 'tagDragEnter' : '';\n                        if (cssDragEnter !== '') {\n                            return <animated.div\n                                style={{\n                                    transform: propsSpring.bottom.interpolate(r => `${r}px`),\n                                    position: 'relative',\n                                    bottom: propsSpring.bottom.interpolate(r => `${r}px`),\n\n\n                                }}\n\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\n                                draggable=\"true\"\n                                onDragEnd={(e) => { handleDragEnd(e) }}\n                                onDragLeave={(e) => { handleDragEnd(e) }}\n                                key={index}\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\n                                {task.taskName}\n                            </animated.div>\n                        } else {\n                            return <div\n\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\n                                draggable=\"true\"\n                                onDragEnd={(e) => { handleDragEnd(e) }}\n                                onDragLeave={(e) => { handleDragEnd(e) }}\n\n                                key={index}\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\n                                {task.taskName}\n                            </div>\n                        }\n                    })}\n                </div>\n                <div className=\"col-2 bg-primary\" style={{ height: 500 }} ></div>\n\n            </div>\n\n        </div>\n    )\n}\n\n// onDragOver={(e)=>{\n//     e.stopPropagation();\n//     e.preventDefault();\n// }}","import React, { useState } from 'react'\nimport _ from 'lodash'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\n\n\n\n\n\n\n\nexport default function DragAndDropDnD(props) {\n\n    const [state, setState] = useState({\n        toDo: {\n            id: 'toDo',\n            items: [\n                { id: '1', taskName: 'Task 1' },\n                { id: '2', taskName: 'Task 2' },\n                { id: '3', taskName: 'Task 3' },\n            ]\n        },\n        inProgress: {\n            id: 'inProgress',\n            items: [\n                { id: '4', taskName: 'Task 4' },\n                { id: '5', taskName: 'Task 5' },\n                { id: '6', taskName: 'Task 6' },\n            ]\n        },\n        done: {\n            id: 'done',\n            items: [\n                { id: '7', taskName: 'Task 7' },\n                { id: '8', taskName: 'Task 8' },\n                { id: '9', taskName: 'Task 9' },\n            ]\n        }\n    })\n\n    const handleDragEnd = (result) => { \n        let {destination,source} = result;\n\n        if(!destination){\n            return ;\n        }\n\n        if(destination.index === source.index && destination.droppableId === source.droppableId){\n            return;\n        }\n\n        //tạo ra 1 tag drag\n        let itemCopy = {...state[source.droppableId].items[source.index]};\n        console.log('itemCopy',itemCopy)\n\n        //Droppable bắt đầu kéo\n        let index = state[source.droppableId].items.findIndex(item => item.id == itemCopy.id);\n        \n        state[source.droppableId].items.splice(index,1);\n\n        //Droppable thả vào\n        let dropDestination = state[destination.droppableId].items;\n\n        dropDestination.splice(destination.index, 0, itemCopy)\n\n\n        setState(state);\n        \n\n        \n    }\n\n    return (\n        <div className=\"container\">\n            <h3 className=\"text-center display-4\">Demo DraggAndDropp DND</h3>\n\n            <DragDropContext onDragEnd={handleDragEnd}>\n\n                <div className=\"row\">\n                    {_.map(state, (statusTask, index) => {\n                        return <Droppable droppableId={statusTask.id} key={index}>\n                            {(provided) => {\n                                return <div className=\"col-4\" >\n\n                                    <div className=\"bg-dark p-5\"\n                                        key={index}\n                                        ref={provided.innerRef}\n                                        {...provided.droppableProps}\n                                    >\n                                        <h3 className=\"text-white\">{statusTask.id}</h3>\n                                        {statusTask.items.map((item, index) => {\n                                            return <Draggable key={item.id} index={index} draggableId={item.id}>\n                                                {(provided) => {\n                                                    return <div\n                                                        ref={provided.innerRef}\n                                                        {...provided.draggableProps}\n                                                        {...provided.dragHandleProps}\n                                                        className=\"mt-2 p-2 bg-white text-center\">\n                                                        {item.taskName}\n                                                    </div>\n                                                }}\n                                            </Draggable>\n\n\n                                        })}\n\n\n                                        {provided.placeholder}\n\n                                    </div>\n                                </div>\n                            }}\n\n                        </Droppable>\n                    })}\n\n                </div>\n            </DragDropContext>\n\n        </div>\n    )\n}\n","import React, { useCallback, useEffect } from \"react\";\n\nimport { Table, Input } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport { AudioOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { responsiveArray } from \"antd/lib/_util/responsiveObserve\";\nimport { debounce, join } from \"lodash\";\nimport { DELETE_USER_SAGA } from \"../../../redux/constants/Cyberbugs/UserConstatnts\";\nimport { history } from \"../../../util/history\";\nconst { Search } = Input;\nconst data = [\n  {\n    key: \"1\",\n    name: \"John Brown\",\n    age: 32,\n    address: \"New York No. 1 Lake Park, New York No. 1 Lake Park\",\n    tags: [\"nice\", \"developer\"]\n  },\n  {\n    key: \"2\",\n    name: \"Jim Green\",\n    age: 42,\n    address: \"London No. 2 Lake Park, London No. 2 Lake Park\",\n    tags: [\"loser\"]\n  },\n  {\n    key: \"3\",\n    name: \"Joe Black\",\n    age: 32,\n    address: \"Sidney No. 1 Lake Park, Sidney No. 1 Lake Park\",\n    tags: [\"cool\", \"teacher\"]\n  }\n];\nexport default function Users(props) {\n  const dispatch = useDispatch();\n\n  const { userSearch } = useSelector(\n    (state) => state.UserLoginCyberBugsReducer\n  );\n\n  useEffect(() => {\n    dispatch({\n      type: \"GET_USER_API\",\n      keyword: \"\"\n    });\n  }, []);\n\n  const debounceSearch = useCallback(\n    debounce(\n      (value) =>\n        dispatch({\n          type: \"GET_USER_API\",\n          keyword: value\n        }),\n      1000\n    ),\n    []\n  );\n\n  const onHandleChange = (e) => {\n    const { value } = e.target;\n    debounceSearch(value);\n  };\n\n  const onSearch = (value) => {\n    dispatch({\n      type: \"GET_USER_API\",\n      keyword: value\n    });\n  };\n\n  const columns = [\n    {\n      title: \"Họ tên\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: 150\n    },\n    {\n      title: \"Số Đt\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\",\n      width: 80\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n      width: 300\n    },\n    {\n      title: \"userId\",\n      dataIndex: \"userId\",\n      key: \"userId\",\n      width: 200\n    },\n\n    {\n      title: \"Tác vụ\",\n      dataIndex: \"userId\",\n      render: (text, record, index) => {\n        return (\n          <div key={index}>\n            <button\n              className=\"mr-1\"\n              onClick={() => {\n                history.push(`users/edituser/${record.userId}`);\n\n                localStorage.setItem(\"editingUser\", JSON.stringify(record));\n              }}\n            >\n              EDIT\n            </button>\n            <button\n              onClick={() => {\n                dispatch({\n                  type: DELETE_USER_SAGA,\n                  userId: record.userId\n                });\n              }}\n            >\n              DELETE\n            </button>\n          </div>\n        );\n      },\n      key: \"tacVu\",\n      width: 200\n    }\n  ];\n\n  const suffix = (\n    <AudioOutlined\n      style={{\n        fontSize: 16,\n        color: \"#1890ff\"\n      }}\n    />\n  );\n\n  return (\n    <div>\n      <h3 className=\"text-3xl mt-10\">Quản lý người dùng</h3>\n\n      <NavLink to={\"/users/addusers\"}>Thêm người dùng</NavLink>\n      {/* <NavLink to=\"/admin/users/addnewuser\">Thêm người dùng</NavLink> */}\n\n      <Search\n        className=\"my-3\"\n        placeholder=\"Tìm kiếm\"\n        // enterButton=\"Search\"\n        size=\"large\"\n        suffix={suffix}\n        onChange={onHandleChange}\n        onSearch={onSearch}\n      />\n\n      <Table columns={columns} dataSource={userSearch} rowKey={\"email\"} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { history } from \"../../../../util/history\";\nimport { EDIT_USER_SAGA } from \"../../../../redux/constants/Cyberbugs/UserConstatnts\";\n\nexport default function EditUser(props) {\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const dispatch = useDispatch();\n  const onFormLayoutChange = ({ size }) => {\n    setComponentSize(size);\n  };\n\n  let editingUser = JSON.parse(localStorage.getItem(\"editingUser\"));\n  //   console.log(editingUser);\n  const formik = useFormik({\n    initialValues: {\n      id: editingUser.userId,\n      name: editingUser.name,\n      email: editingUser.email,\n      passWord: \"\",\n      phoneNumber: editingUser.phoneNumber\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(6, \"Tài khoản phải trên 6 ký tự\")\n        .max(30, \"Tài khoản phải ít hơn 40 ký tự\")\n        .required(\"Không được bỏ trống!\"),\n      passWord: Yup.string()\n        .min(6, \"Password phải trên 6 ký tự\")\n        .required(\"Không được bỏ trống!\"),\n\n      email: Yup.string()\n        .required(\"Không được bỏ trống!\")\n        .email(\"Email không hợp lệ! Vui lòng nhập lại\"),\n      //   hoTen: Yup.string().required(\"Không được bỏ trống!\"),\n      phoneNumber: Yup.string()\n        .matches(\n          /(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b/,\n          \"Số ĐT không hơp lệ! Vui lòng nhập lại\"\n        )\n        .required(\"Không được bỏ trống!\")\n    }),\n\n    onSubmit: (values) => {\n      //   console.log(\"valus\", values);\n      dispatch({\n        type: EDIT_USER_SAGA,\n        editingUserInfo: values\n      });\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <h3 className=\"display-4\">Chỉnh sửa người dùng</h3>\n\n      <Form\n        onSubmitCapture={formik.handleSubmit}\n        labelCol={{\n          span: 4\n        }}\n        wrapperCol={{\n          span: 14\n        }}\n        layout=\"horizontal\"\n        initialValues={{\n          size: componentSize\n        }}\n        onValuesChange={onFormLayoutChange}\n        size={componentSize}\n      >\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Tên\">\n            <Input\n              name=\"name\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n            />\n            {formik.errors.name && formik.touched.name\n              ? formik.errors.name\n              : \"\"}\n          </Form.Item>\n        </div>\n\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Password\">\n            <Input name=\"passWord\" onChange={formik.handleChange} />\n            {formik.errors.passWord && formik.touched.passWord\n              ? formik.errors.passWord\n              : \"\"}\n          </Form.Item>\n        </div>\n\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Email\">\n            <Input\n              name=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n            {formik.errors.email && formik.touched.email\n              ? formik.errors.email\n              : \"\"}\n          </Form.Item>\n        </div>\n\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Số điện thoại\">\n            <Input\n              name=\"phoneNumber\"\n              onChange={formik.handleChange}\n              value={formik.values.phoneNumber}\n            />\n            {formik.errors.phoneNumber && formik.touched.phoneNumber\n              ? formik.errors.phoneNumber\n              : \"\"}\n          </Form.Item>\n        </div>\n\n        <Form.Item label=\"Tác vụ\">\n          <Button htmlType=\"submit\" className=\"mr-2\">\n            Chỉnh sửa\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { SIGN_UP_SAGA } from \"../../../../redux/constants/Cyberbugs/Cyberbugs\";\nimport { history } from \"../../../../util/history\";\nimport { ADD_USER_SAGA } from \"../../../../redux/constants/Cyberbugs/UserConstatnts\";\n\nexport default function AddUsers(props) {\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const dispatch = useDispatch();\n  const onFormLayoutChange = ({ size }) => {\n    setComponentSize(size);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      passWord: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(6, \"Tài khoản phải trên 6 ký tự\")\n        .max(30, \"Tài khoản phải ít hơn 40 ký tự\")\n        .required(\"Không được bỏ trống!\"),\n      passWord: Yup.string()\n        .min(6, \"Password phải trên 6 ký tự\")\n        .required(\"Không được bỏ trống!\"),\n\n      email: Yup.string()\n        .required(\"Không được bỏ trống!\")\n        .email(\"Email không hợp lệ! Vui lòng nhập lại\"),\n      phoneNumber: Yup.string()\n        .matches(\n          /(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b/,\n          \"Số ĐT không hơp lệ! Vui lòng nhập lại\"\n        )\n        .required(\"Không được bỏ trống!\")\n    }),\n\n    onSubmit: (values) => {\n      dispatch({\n        type: ADD_USER_SAGA,\n        userInfo: values\n      });\n    }\n  });\n  return (\n    <div className=\"container\">\n      <Form\n        onSubmitCapture={formik.handleSubmit}\n        labelCol={{\n          span: 4\n        }}\n        wrapperCol={{\n          span: 14\n        }}\n        layout=\"horizontal\"\n        initialValues={{\n          size: componentSize\n        }}\n        onValuesChange={onFormLayoutChange}\n        size={componentSize}\n      >\n        <h3 className=\"ml-3\">Thêm người dùng</h3>\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Tên\">\n            <Input name=\"name\" onChange={formik.handleChange} />\n            {formik.errors.name ? formik.errors.name : \"\"}\n          </Form.Item>\n        </div>\n\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Password\">\n            <Input name=\"passWord\" onChange={formik.handleChange} />\n            {formik.errors.passWord ? formik.errors.passWord : \"\"}\n          </Form.Item>\n        </div>\n\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Email\">\n            <Input name=\"email\" onChange={formik.handleChange} />\n            {formik.errors.email ? formik.errors.email : \"\"}\n          </Form.Item>\n        </div>\n\n        <div style={{ height: 60 }}>\n          <Form.Item label=\"Số điện thoại\">\n            <Input name=\"phoneNumber\" onChange={formik.handleChange} />\n            {formik.errors.phoneNumber ? formik.errors.phoneNumber : \"\"}\n          </Form.Item>\n        </div>\n\n        <Form.Item label=\"Tác vụ\">\n          <Button htmlType=\"submit\" className=\"mr-2\" onClick={() => {}}>\n            Thêm người dùng\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Switch, useHistory } from \"react-router-dom\";\nimport LoadingComponent from \"./components/GlobalSetting/LoadingComponent/LoadingComponent\";\nimport About from \"./pages/About/About\";\nimport BaiTapToDoListSaga from \"./pages/BaiTapToDoListSaga/BaiTapToDoListSaga\";\nimport Contact from \"./pages/Contact/Contact\";\nimport LoginCyberBugs from \"./pages/CyberBugs/LoginCyberBugs/LoginCyberBugs\";\nimport DemoHOCModal from \"./pages/DemoHOCModal/DemoHOCModal\";\nimport Detail from \"./pages/Detail/Detail\";\nimport Home from \"./pages/Home/Home\";\nimport PageNotFound from \"./pages/PageNotFound/PageNotFound\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Todolist from \"./pages/Todolist/Todolist\";\nimport ToDoListRedux from \"./pages/Todolist/ToDoListRedux\";\nimport TodolistRFC from \"./pages/Todolist/TodolistRFC\";\nimport { HomeTemplate } from \"./templates/HomeTemplate/HomeTemplate\";\nimport { UserLoginTemplate } from \"./templates/HomeTemplate/UserLoginTemplate\";\nimport { useDispatch } from \"react-redux\";\nimport { CyberbugsTemplate } from \"./templates/HomeTemplate/CyberbugsTemplate\";\nimport indexCyberBugs from \"./pages/CyberBugs/ProjectDetail/indexCyberBugs\";\nimport CreateProject from \"./pages/CyberBugs/CreateProject/CreateProject\";\nimport ProjectManagement from \"./pages/CyberBugs/ProjectManagement/ProjectManagement\";\nimport DrawerCyberBugs from \"./HOC/CyberbugsHOC/DrawerCyberBugs\";\nimport Demo from \"./pages/Demo/Demo\";\nimport DragAndDropDnD from \"./pages/DragAndDropDnD/DragAndDropDnD\";\nimport Register from \"./pages/Register/Register\";\nimport Users from \"./pages/CyberBugs/Users/Users\";\nimport EditUser from \"./pages/CyberBugs/Users/EditUser/EditUser\";\nimport AddUsers from \"./pages/CyberBugs/Users/AddUsers/AddUsers\";\n\nfunction App() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: \"ADD_HISTORY\", history: history });\n  }, []);\n\n  return (\n    <div>\n      <LoadingComponent />\n\n      <DrawerCyberBugs />\n\n      <Switch>\n        <HomeTemplate path=\"/home\" exact Component={Home} />\n        <HomeTemplate exact path=\"/contact\" Component={Contact} />\n        <HomeTemplate exact path=\"/about\" Component={About} />\n        <UserLoginTemplate exact path=\"/\" Component={LoginCyberBugs} />\n        <UserLoginTemplate exact path=\"/register\" Component={Register} />\n\n        <HomeTemplate exact path=\"/detail/:id\" Component={Detail} />\n        <HomeTemplate exact path=\"/profile\" Component={Profile} />\n        <HomeTemplate exact path=\"/todolistrfc\" Component={TodolistRFC} />\n        <HomeTemplate exact path=\"/todolistrcc\" Component={Todolist} />\n        <HomeTemplate exact path=\"/todolistredux\" Component={ToDoListRedux} />\n        <HomeTemplate\n          exact\n          path=\"/todolistsaga\"\n          Component={BaiTapToDoListSaga}\n        />\n        <HomeTemplate exact path=\"/demohocmodal\" Component={DemoHOCModal} />\n        <HomeTemplate exact path=\"/demo\" Component={Demo} />\n        <HomeTemplate\n          exact\n          path=\"/demodragdropdnd\"\n          Component={DragAndDropDnD}\n        />\n        <CyberbugsTemplate exact path=\"/cyberbugs\" Component={indexCyberBugs} />\n        <CyberbugsTemplate\n          exact\n          path=\"/createproject\"\n          Component={CreateProject}\n        />\n        <CyberbugsTemplate\n          exact\n          path=\"/projectmanagement\"\n          Component={ProjectManagement}\n        />\n        <CyberbugsTemplate\n          exact\n          path=\"/projectdetail/:projectId\"\n          Component={indexCyberBugs}\n        />\n\n        <CyberbugsTemplate exact path=\"/users\" Component={Users} />\n        <CyberbugsTemplate\n          exact\n          path=\"/users/edituser/:id\"\n          Component={EditUser}\n        />\n        <CyberbugsTemplate exact path=\"/users/addusers\" Component={AddUsers} />\n\n        <HomeTemplate path=\"*\" component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_TASK_API } from \"../constants/ToDoListConst\";\n\nconst initialState = {\n  taskList: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TASK_API:\n      state.taskList = action.taskList;\n      return { ...state };\n\n    default:\n      return state;\n  }\n};\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nconst initialState = {\n    isLoading:false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case DISPLAY_LOADING:\n        state.isLoading = true;\n        return { ...state }\n    case HIDE_LOADING:{\n        state.isLoading=false;\n        return {...state}\n    }\n    default:\n        return state\n    }\n}\n","import React from 'react'\n\nconst stateDefault = {\n    Component: <p>Nội dung mặc định</p>\n}\n\n\nexport const ModalReducer = (state = stateDefault,action) => {\n    switch(action.type) {\n        case 'OPEN_FORM' : {\n            state.Component = action.Component;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import Axios from \"axios\";\nimport { DOMAIN } from \"../util/constants/settingSystem\"\n\nexport class ToDoListService {\n    constructor(){\n\n    }\n\n    getTaskApi = () => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/GetAllTask`,\n            method: 'GET'\n        })\n    }\n\n    addTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/addTask`,\n            method: 'POST',\n            data: {\n                taskName:taskName\n            }\n        })\n    }\n\n    deleteTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE',\n        })\n    }\n\n    checkDoneTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n    rejectTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n}\n\nexport const toDoListService = new ToDoListService();\n\n","import { call, delay, takeLatest, put } from \"redux-saga/effects\";\nimport {\n  ADD_TASK_API,\n  CHECK_TASK_API,\n  DELETE_TASK_API,\n  GET_TASKLIST_API,\n  GET_TASK_API,\n  REJECT_TASK_API\n} from \"../constants/ToDoListConst\";\nimport { toDoListService } from \"../../services/ToDoListService\";\nimport { STATUS_CODE } from \"../../util/constants/settingSystem\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nfunction* getTaskApiAction(action) {\n  yield put({\n    type: DISPLAY_LOADING\n  });\n  try {\n    let { data, status } = yield call(toDoListService.getTaskApi);\n    yield delay(300);\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_TASK_API,\n        taskList: data\n      });\n    } else {\n      console.log(\"error\");\n    }\n  } catch (err) {\n    console.log(\"err\");\n  }\n  yield put({\n    type: HIDE_LOADING\n  });\n}\n\nexport function* theoDoiActionGetTaskApi() {\n  yield takeLatest(GET_TASKLIST_API, getTaskApiAction);\n}\n\nfunction* addTaskApiAction(action) {\n  const { taskName } = action;\n\n  try {\n    const { data, status } = yield call(() => {\n      return toDoListService.addTaskApi(taskName);\n    });\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_TASKLIST_API\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* theoDoiActionAddTaskApi() {\n  yield takeLatest(ADD_TASK_API, addTaskApiAction);\n}\n\nfunction* deleteTaskApi(action) {\n  const { taskName } = action;\n  try {\n    const { data, status } = yield call(() => {\n      return toDoListService.deleteTaskApi(taskName);\n    });\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_TASKLIST_API\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* theoDoiActionDeleteTask() {\n  yield takeLatest(DELETE_TASK_API, deleteTaskApi);\n}\n\nfunction* checkDoneTaskApi(action) {\n  const { taskName } = action;\n\n  try {\n    const { data, status } = yield call(() => {\n      return toDoListService.checkDoneTask(taskName);\n    });\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_TASKLIST_API\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* theoDoiDoneTask() {\n  yield takeLatest(CHECK_TASK_API, checkDoneTaskApi);\n}\n\nexport function* rejectTaskApi(action) {\n  const { taskName } = action;\n\n  try {\n    const { data, status } = yield call(() => {\n      return toDoListService.rejectTask(taskName);\n    });\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_TASKLIST_API\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* theoDoiRejectTask() {\n  yield takeLatest(REJECT_TASK_API, rejectTaskApi);\n}\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';","const { default: Axios } = require(\"axios\")\nconst { DOMAIN_CYBERBUG, TOKEN } = require(\"../util/constants/settingSystem\")\n\nexport const cyberbugsService = { \n    signinCyberBugs: (userLogin) => {\n       return Axios({\n            url:`${DOMAIN_CYBERBUG}/users/signin`,\n            method:'POST',\n            data: userLogin\n        }) \n    },\n    getAllProjectCategory: () => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/ProjectCategory`,\n            method: 'GET'\n        })\n    },\n    createProject: (newProject) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/createProject`,\n            method:'POST',\n            data:newProject\n        })\n    },\n    createProjectAuthorization : (newProject) => {\n        console.log(localStorage.getItem(TOKEN))\n        return Axios({\n            url: `${DOMAIN_CYBERBUG}/Project/createProjectAuthorize`,\n            method:'POST',\n            data:newProject,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT \n        })\n    },\n    getListProject: () => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/getAllProject`,\n            method:'GET',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    },\n    updateProject: (projectUpdate) => { \n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/updateProject?projectId=${projectUpdate.id}`,\n            method:'PUT',\n            data:projectUpdate,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n}\n\n\n\n","import Axios from \"axios\";\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\";\n\nexport class baseService {\n  //put json về phía backend\n  put = (url, model) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/${url}`,\n      method: \"PUT\",\n      data: model,\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) } //JWT\n    });\n  };\n\n  post = (url, model) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/${url}`,\n      method: \"POST\",\n      data: model,\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) } //JWT\n    });\n  };\n\n  get = (url) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/${url}`,\n      method: \"GET\",\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) } //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n    });\n  };\n\n  delete = (url) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/${url}`,\n      method: \"DELETE\",\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) } //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n    });\n  };\n}\n","import { baseService } from \"./baseService\";\n\nexport class UserService extends baseService {\n  constructor() {\n    super();\n  }\n\n  getUser = (keyword) => {\n    return this.get(`/Users/getUser?keyword=${keyword}`);\n    // return this.get(`Users/getUser`);\n  };\n\n  assignUserProject = (userProject) => {\n    return this.post(`Project/assignUserProject`, userProject);\n  };\n\n  deleteUserFromProject = (userProject) => {\n    return this.post(`Project/removeUserFromProject`, userProject);\n  };\n\n  getUserByProjectId = (idProject) => {\n    return this.get(`Users/getUserByProjectId?idProject=${idProject}`);\n  };\n\n  signUpService = (userInfo) => {\n    return this.post(`Users/signup`, userInfo);\n  };\n\n  deleteUser = (userId) => {\n    return this.delete(`Users/deleteUser?id=${userId}`);\n  };\n\n  editUser = (editingUserInfo) => {\n    return this.put(`Users/editUser`, editingUserInfo);\n  };\n}\n\nexport const userService = new UserService();\n","import { call, delay, takeLatest, put } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport {\n  SIGN_UP_SAGA,\n  USER_SIGNIN_API,\n  USLOGIN\n} from \"../../constants/Cyberbugs/Cyberbugs\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport {\n  STATUS_CODE,\n  TOKEN,\n  USER_LOGIN\n} from \"../../../util/constants/settingSystem\";\n\nimport { history } from \"../../../util/history\";\nimport { userService } from \"../../../services/UserService\";\nimport {\n  ADD_USER_SAGA,\n  DELETE_USER_SAGA,\n  EDIT_USER_SAGA,\n  GET_USER_BY_PROJECT_ID,\n  GET_USER_BY_PROJECT_ID_SAGA\n} from \"../../constants/Cyberbugs/UserConstatnts\";\n\nfunction* signinSaga(action) {\n  yield put({\n    type: DISPLAY_LOADING\n  });\n  yield delay(500);\n\n  try {\n    const { data } = yield call(() =>\n      cyberbugsService.signinCyberBugs(action.userLogin)\n    );\n\n    localStorage.setItem(TOKEN, data.content.accessToken);\n\n    localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\n\n    yield put({\n      type: USLOGIN,\n      userLogin: data.content\n    });\n\n    history.push(\"/projectmanagement\");\n  } catch (err) {\n    console.log(err.response.data);\n  }\n\n  yield put({\n    type: HIDE_LOADING\n  });\n}\n\nexport function* theoDoiSignin() {\n  yield takeLatest(USER_SIGNIN_API, signinSaga);\n}\n\nfunction* getUserSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      userService.getUser(action.keyword)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: \"GET_USER_SEARCH\",\n        lstUserSearch: data.content\n      });\n    }\n  } catch (err) {\n    console.log(err.response?.data);\n  }\n}\n\nexport function* theoDoiGetUser() {\n  yield takeLatest(\"GET_USER_API\", getUserSaga);\n}\n\nfunction* addUserProjectSaga(action) {\n  try {\n    const { status } = yield call(() =>\n      userService.assignUserProject(action.userProject)\n    );\n\n    yield put({\n      type: \"GET_LIST_PROJECT_SAGA\"\n    });\n  } catch (err) {\n    console.log(err.response.data);\n  }\n}\n\nexport function* theoDoiAddUserProject() {\n  yield takeLatest(\"ADD_USER_PROJECT_API\", addUserProjectSaga);\n}\n\nfunction* removeUserProjectSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      userService.deleteUserFromProject(action.userProject)\n    );\n\n    yield put({\n      type: \"GET_LIST_PROJECT_SAGA\"\n    });\n  } catch (err) {\n    console.log(err.response.data);\n  }\n}\n\nexport function* theoDoiRemoveUserProject() {\n  yield takeLatest(\"REMOVE_USER_PROJECT_API\", removeUserProjectSaga);\n}\n\nfunction* getUserByProjectIdSaga(action) {\n  const { idProject } = action;\n\n  try {\n    const { data, status } = yield call(() =>\n      userService.getUserByProjectId(idProject)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_USER_BY_PROJECT_ID,\n        arrUser: data.content\n      });\n    }\n  } catch (err) {\n    console.log(err);\n    console.log(err.response?.data);\n    if (err.response?.data.statusCode === STATUS_CODE.NOT_FOUND) {\n      yield put({\n        type: GET_USER_BY_PROJECT_ID,\n        arrUser: []\n      });\n    }\n  }\n}\nexport function* theoDoiGetUserByProjectIdSaga() {\n  yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga);\n}\n\nfunction* SignUpSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      userService.signUpService(action.userInfo)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      alert(\"Tạo tài khoản thành công\");\n      history.push(\"/login\");\n    }\n  } catch (err) {\n    alert(err.response.data);\n  }\n}\n\nexport function* theoDoiSignUpSaga() {\n  yield takeLatest(SIGN_UP_SAGA, SignUpSaga);\n}\n\nfunction* deleteUserSaga(action) {\n  try {\n    let confirm = window.confirm(\"Bạn thực sự muốn xoá người dùng này?\");\n    if (confirm) {\n      const { data, status } = yield call(() =>\n        userService.deleteUser(action.userId)\n      );\n\n      if (status === STATUS_CODE.SUCCESS) {\n        alert(\"Xóa người dùng thành công\");\n\n        yield put({\n          type: \"GET_USER_API\",\n          keyword: \"\"\n        });\n      }\n    }\n  } catch (err) {\n    alert(err.response?.data.content);\n  }\n}\n\nexport function* theoDoiDeleteUserSaga() {\n  yield takeLatest(DELETE_USER_SAGA, deleteUserSaga);\n}\n\nfunction* editUserSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      userService.editUser(action.editingUserInfo)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      alert(\"Chỉnh sửa người dùng thành công\");\n      history.goBack();\n    }\n  } catch (err) {\n    alert(err.response?.data);\n  }\n}\n\nexport function* theoDoiEditUserSaga() {\n  yield takeLatest(EDIT_USER_SAGA, editUserSaga);\n}\n\nfunction* addUserSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      userService.signUpService(action.userInfo)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      alert(\"Thêm tài khoản thành công\");\n      window.location.reload();\n    }\n  } catch (err) {\n    alert(err.response?.data);\n  }\n}\n\nexport function* theoDoiAddUserSaga() {\n  yield takeLatest(ADD_USER_SAGA, addUserSaga);\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { GET_ALL_PROJECT_CATEGORY, GET_ALL_PROJECT_CATEGORY_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\n\nfunction* getAllProjectCategorySaga(action) {\n    console.log('actionSaga', action);\n\n    try {\n\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => cyberbugsService.getAllProjectCategory());\n\n\n\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_ALL_PROJECT_CATEGORY,\n                data: data.content\n            });\n        }\n\n\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n\n\n\n\n\nexport function* theoDoigetAllProjectCategory() {\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga);\n}","import { baseService } from \"./baseService\";\n\nexport class ProjectService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllProject = () => {\n        return this.get(`Project/getAllProject`);\n    }\n\n    deleteProject = (id) => {\n        \n       return this.delete(`Project/deleteProject?projectId=${id}`);\n    }\n\n    getProjectDetail = (projectId) => {\n        return this.get(`Project/getProjectDetail?id=${projectId}`);\n    }\n\n}\n\n\nexport const projectService = new ProjectService();\n","import { notification } from \"antd\"\n\nexport const notifiFunction = (type, message, description = '') => {\n    notification[type]({ //action.typeNotification = success | warning | info | error,\n        message: message,\n        description: description\n    })\n}","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport { history } from \"../../../util/history\";\nimport { projectService } from \"../../../services/ProjectService\";\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\nimport {\n  GET_ALL_PROJECT,\n  GET_ALL_PROJECT_SAGA\n} from \"../../constants/Cyberbugs/ProjectCyberBugsConstants\";\nimport { GET_USER_BY_PROJECT_ID_SAGA } from \"../../constants/Cyberbugs/UserConstatnts\";\nfunction* createProjectSaga(action) {\n  yield put({\n    type: DISPLAY_LOADING\n  });\n  yield delay(500);\n\n  try {\n    //Gọi api lấy dữ liệu về\n    const { status } = yield call(() =>\n      cyberbugsService.createProjectAuthorization(action.newProject)\n    );\n    //Gọi api thành công thì dispatch lên reducer thông qua put\n    if (status === STATUS_CODE.SUCCESS) {\n      history.push(\"/projectmanagement\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  yield put({\n    type: HIDE_LOADING\n  });\n}\n\nexport function* theoDoiCreateProjectSaga() {\n  yield takeLatest(\"CREATE_PROJECT_SAGA\", createProjectSaga);\n}\n\nfunction* getListProjectSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      cyberbugsService.getListProject()\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: \"GET_LIST_PROJECT\",\n        projectList: data.content\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* theoDoiGetListProjectSaga() {\n  yield takeLatest(\"GET_LIST_PROJECT_SAGA\", getListProjectSaga);\n}\n\nfunction* updateProjectSaga(action) {\n  yield put({\n    type: DISPLAY_LOADING\n  });\n  yield delay(500);\n\n  try {\n    const { status } = yield call(() =>\n      cyberbugsService.updateProject(action.prjectUpdate)\n    );\n    if (status === STATUS_CODE.SUCCESS) {\n    }\n    yield call(getListProjectSaga);\n    yield put({\n      type: \"CLOSE_DRAWER\"\n    });\n  } catch (err) {\n    console.log(err);\n  }\n\n  yield put({\n    type: HIDE_LOADING\n  });\n}\n\nexport function* theoDoiUpdateProjectSaga() {\n  yield takeLatest(\"UPDATE_PROJECT_SAGA\", updateProjectSaga);\n}\n\nfunction* deleteProjectSaga(action) {\n  yield put({\n    type: DISPLAY_LOADING\n  });\n  yield delay(500);\n\n  try {\n    const { status } = yield call(() =>\n      projectService.deleteProject(action.idProject)\n    );\n    if (status === STATUS_CODE.SUCCESS) {\n      notifiFunction(\"success\", \"Delete project successfully !\");\n    } else {\n      notifiFunction(\"error\", \"Delete project fail !\");\n    }\n    yield call(getListProjectSaga);\n    yield put({\n      type: \"CLOSE_DRAWER\"\n    });\n  } catch (err) {\n    notifiFunction(\"error\", \"Delete project fail !\");\n    console.log(err);\n  }\n\n  yield put({\n    type: HIDE_LOADING\n  });\n}\n\nexport function* theoDoiDeleteProject() {\n  yield takeLatest(\"DELETE_PROJECT_SAGA\", deleteProjectSaga);\n}\n\nfunction* getProjectDetailSaga(action) {\n  yield delay(500);\n\n  try {\n    const { data } = yield call(() =>\n      projectService.getProjectDetail(action.projectId)\n    );\n\n    yield put({\n      type: \"PUT_PROJECT_DETAIL\",\n      projectDetail: data.content\n    });\n  } catch (err) {\n    console.log(\"404 not found !\");\n    history.push(\"/projectmanagement\");\n  }\n}\n\nexport function* theoDoiGetProjectDetail() {\n  yield takeLatest(\"GET_PROJECT_DETAIL\", getProjectDetailSaga);\n}\n\nfunction* getProjectAllSaga(action) {\n  yield put({\n    type: DISPLAY_LOADING\n  });\n  yield delay(500);\n\n  try {\n    const { data } = yield call(() => projectService.getAllProject());\n\n    yield put({\n      type: GET_ALL_PROJECT,\n      arrProject: data.content\n    });\n\n    yield put({\n      type: GET_USER_BY_PROJECT_ID_SAGA,\n      idProject: data.content[0].id\n    });\n  } catch (err) {\n    console.log(\"404 not found !\");\n    history.push(\"/projectmanagement\");\n  }\n\n  yield put({\n    type: HIDE_LOADING\n  });\n}\n\nexport function* theoDoiGetAllProjectSaga() {\n  yield takeLatest(GET_ALL_PROJECT_SAGA, getProjectAllSaga);\n}\n","import { baseService } from \"./baseService\";\n\nexport class TaskTypeService extends baseService {\n\n    constructor(){\n        super();\n    }\n    getAllTaskType = () => {\n        return this.get('TaskType/getAll');\n    }\n\n}\n\n\nexport const taskTypeService = new TaskTypeService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { taskTypeService } from \"../../../services/TaskTypeService\";\nimport { GET_ALL_TASK_TYPE, GET_ALL_TASK_TYPE_SAGA } from \"../../constants/Cyberbugs/TaskTypeConstants\";\n\nfunction * getAllTaskTypeSaga (action) {\n\n    try {\n        const {data,status} = yield call(()=> taskTypeService.getAllTaskType());\n\n        yield put({\n            type: GET_ALL_TASK_TYPE,\n            arrTaskType:data.content\n        })\n\n\n\n    }catch (err) {\n        console.log(err);\n    }\n\n\n\n}\n\n\nexport function * theoDoiGetAllTaskTypeSaga () {\n    yield takeLatest(GET_ALL_TASK_TYPE_SAGA,getAllTaskTypeSaga)\n}","import { baseService } from \"./baseService\";\n\nexport class PriorityService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllPriority = () => {\n        return this.get(`Priority/getAll`);\n    }\n\n    \n\n}\n\n\nexport const priorityService = new PriorityService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { priorityService } from \"../../../services/PriorityService\";\nimport { GET_ALL_PRIORITY, GET_ALL_PRIORITY_SAGA } from \"../../constants/Cyberbugs/PriorityConstants\";\n\nfunction * getAllPrioritySaga(action) {\n    try {\n        const {data,status} = yield call(()=> priorityService.getAllPriority());\n\n        yield put({type:GET_ALL_PRIORITY,arrPriority:data.content});\n\n\n    }catch(err) {\n        console.log(err);\n    }\n}\n\n\n\nexport function * theoDoiGetAllPriority() {\n    yield takeLatest(GET_ALL_PRIORITY_SAGA,getAllPrioritySaga)\n}","import { baseService } from \"./baseService\";\n\nexport class TaskService extends baseService {\n\n    constructor(){\n        super();\n    }\n    createTask = (taskObject) => {\n        return this.post('Project/createTask',taskObject);\n    }\n\n\n    getTaskDetail = (taskId) => {\n        return this.get(`Project/getTaskDetail?taskId=${taskId}`)\n    }\n\n    updateStatusTask = (taskStatusUpdate) => {\n        return this.put(`Project/updateStatus`,taskStatusUpdate);\n    }\n    updateTask = (taskUpdate) => {\n        return this.post(`Project/updateTask`,taskUpdate);\n    }\n}   \n\n\nexport const taskService = new TaskService();","import { call, put, select, takeLatest } from \"redux-saga/effects\";\nimport { taskService } from \"../../../services/TaskService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport {\n  HANDLE_CHANGE_POST_API_SAGA,\n  GET_TASK_DETAIL_SAGA,\n  GET_TASK_DETAIL,\n  UPDATE_STATUS_TASK_SAGA,\n  UPDATE_TASK_SAGA,\n  CHANGE_TASK_MODAL,\n  CHANGE_ASSIGNESS,\n  REMOVE_USER_ASSIGN\n} from \"../../constants/Cyberbugs/TaskConstants\";\nfunction* createTaskSaga(action) {\n  try {\n    yield put({\n      type: DISPLAY_LOADING\n    });\n    const { data, status } = yield call(() =>\n      taskService.createTask(action.taskObject)\n    );\n\n    //Gọi api thành công thì dispatch lên reducer thông qua put\n    if (status === STATUS_CODE.SUCCESS) {\n    }\n    yield put({\n      type: \"CLOSE_DRAWER\"\n    });\n    notifiFunction(\"success\", \"Create task successfully !\");\n  } catch (err) {\n    console.log(err.response.data);\n  }\n\n  yield put({\n    type: HIDE_LOADING\n  });\n}\n\nexport function* theoDoiCreateTaskSaga() {\n  yield takeLatest(\"CREATE_TASK_SAGA\", createTaskSaga);\n}\n\nfunction* getTaskDetailSaga(action) {\n  const { taskId } = action;\n\n  try {\n    const { data, status } = yield call(() =>\n      taskService.getTaskDetail(taskId)\n    );\n\n    yield put({\n      type: GET_TASK_DETAIL,\n      taskDetailModal: data.content\n    });\n  } catch (err) {\n    console.log(err.response?.data);\n  }\n}\n\nexport function* theoDoiGetTaskDetailSaga(action) {\n  yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga);\n}\n\n//update task\n\nfunction* updateTaskStatusSaga(action) {\n  const { taskUpdateStatus } = action;\n  try {\n    //Cập nhật api status cho task hiện tại (Task đang mở modal)\n    const { data, status } = yield call(() =>\n      taskService.updateStatusTask(taskUpdateStatus)\n    );\n\n    //Sau khi thành công gọi lại getProjectDetail saga để sắp xếp lại thông tin các task\n    // console.log(data)\n    if (status == STATUS_CODE.SUCCESS) {\n      yield put({\n        type: \"GET_PROJECT_DETAIL\",\n        projectId: taskUpdateStatus.projectId\n      });\n\n      yield put({\n        type: GET_TASK_DETAIL_SAGA,\n        taskId: taskUpdateStatus.taskId\n      });\n    }\n  } catch (err) {\n    console.log(err);\n    console.log(err.response?.data);\n  }\n}\n\nexport function* theoDoiUpdateTaskStatusSaga() {\n  yield takeLatest(UPDATE_STATUS_TASK_SAGA, updateTaskStatusSaga);\n}\n\nfunction* updateTaskSaga(action) {}\n\nexport function* theoDoiUdpateTask() {\n  yield takeLatest(UPDATE_TASK_SAGA, updateTaskSaga);\n}\n\nexport function* handelChangePostApi(action) {\n  // console.log('abc', action)\n  //Gọi action làm thay đổi taskDetail modal\n  switch (action.actionType) {\n    case CHANGE_TASK_MODAL:\n      {\n        const { value, name } = action;\n\n        yield put({\n          type: CHANGE_TASK_MODAL,\n          name,\n          value\n        });\n      }\n      break;\n    case CHANGE_ASSIGNESS:\n      {\n        const { userSelected } = action;\n        yield put({\n          type: CHANGE_ASSIGNESS,\n          userSelected\n        });\n      }\n      break;\n    case REMOVE_USER_ASSIGN:\n      {\n        const { userId } = action;\n        yield put({\n          type: REMOVE_USER_ASSIGN,\n          userId\n        });\n      }\n      break;\n  }\n\n  //Save qua api updateTaskSaga\n  //Lây dữ liệu từ state.taskDetailModal\n  let { taskDetailModal } = yield select((state) => state.TaskReducer);\n  //Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\n\n  const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\n    return user.id;\n  });\n\n  const taskUpdateApi = { ...taskDetailModal, listUserAsign };\n  try {\n    const { data, status } = yield call(() =>\n      taskService.updateTask(taskUpdateApi)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: \"GET_PROJECT_DETAIL\",\n        projectId: taskUpdateApi.projectId\n      });\n\n      yield put({\n        type: GET_TASK_DETAIL_SAGA,\n        taskId: taskUpdateApi.taskId\n      });\n    }\n  } catch (err) {\n    console.log(err.response?.data);\n    console.log(err);\n  }\n}\n\nexport function* theoDoiHandleChangePostApi() {\n  yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handelChangePostApi);\n}\n","import { baseService } from \"./baseService\";\n\nexport class StatusService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllStatus = () => {\n        return this.get(`Status/getAll`)\n    }\n\n}\n\n\nexport const statusService = new StatusService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { statusService } from \"../../../services/StatusService\";\nimport { GET_ALL_STATUS, GET_ALL_STATUS_SAGA } from \"../../constants/Cyberbugs/StatusConstant\";\n\nfunction * getAllStatusSaga (action) {\n\n    try {\n        const {data,status} = yield call(()=> statusService.getAllStatus());\n\n        yield put({\n            type: GET_ALL_STATUS,\n            arrStatus:data.content\n        })\n\n\n    }catch(err) {\n        console.log(err);\n        console.log(err.response?.data)\n    }\n\n}\n\n\n\nexport function *theoDoiGetAllStatusSaga() {\n\n    yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatusSaga)\n\n}","import { baseService } from \"./baseService\";\n\nexport class CommentService extends baseService {\n  constructor() {\n    super();\n  }\n\n  insertCommentService = (commentDetail) => {\n    return this.post(`Comment/insertComment`, commentDetail);\n  };\n\n  deleteCommentService = (idComment) => {\n    return this.delete(`Comment/deleteComment?idComment=${idComment}`);\n  };\n\n  updateCommentService = (idComment, newContentComment) => {\n    return this.put(\n      `Comment/updateComment?id=${idComment}&contentComment=${newContentComment}`\n    );\n  };\n}\n\nexport const commentService = new CommentService();\n","import { call, put, select, takeLatest } from \"redux-saga/effects\";\nimport { commentService } from \"../../../services/CommentService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport {\n  DELETE_COMMENT_SAGA,\n  INSERT_COMMENT_SAGA,\n  RESET_UPDATING_COMMENT,\n  UPDATE_COMMENT_SAGA\n} from \"../../constants/Cyberbugs/CommentConstants\";\nimport { GET_TASK_DETAIL_SAGA } from \"../../constants/Cyberbugs/TaskConstants\";\n\nfunction* insertCommentSaga(action) {\n  try {\n    const { status } = yield call(() =>\n      commentService.insertCommentService(action.commentDetail)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      const { taskDetailModal } = yield select((state) => state.TaskReducer);\n\n      yield put({\n        type: GET_TASK_DETAIL_SAGA,\n        taskId: taskDetailModal.taskId\n      });\n    }\n  } catch (err) {\n    console.log(\"errors\", err.response?.data);\n  }\n}\n\nexport function* theoDoiInsertCommentSaga() {\n  yield takeLatest(INSERT_COMMENT_SAGA, insertCommentSaga);\n}\n\nfunction* deleteCommentSaga(action) {\n  try {\n    const { status } = yield call(() =>\n      commentService.deleteCommentService(action.commentId)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      const { taskDetailModal } = yield select((state) => state.TaskReducer);\n\n      yield put({\n        type: GET_TASK_DETAIL_SAGA,\n        taskId: taskDetailModal.taskId\n      });\n    }\n  } catch (err) {\n    console.log(err.response?.data);\n  }\n}\n\nexport function* theoDoiDeleteCommentSaga() {\n  yield takeLatest(DELETE_COMMENT_SAGA, deleteCommentSaga);\n}\n\nfunction* updateCommentSaga(action) {\n  try {\n    const { status } = yield call(() =>\n      commentService.updateCommentService(\n        action.commentId,\n        action.newCommentContent\n      )\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      const { taskDetailModal } = yield select((state) => state.TaskReducer);\n\n      yield put({\n        type: GET_TASK_DETAIL_SAGA,\n        taskId: taskDetailModal.taskId\n      });\n\n      yield put({\n        type: RESET_UPDATING_COMMENT\n      });\n    }\n  } catch (err) {\n    console.log(err.response?.data);\n  }\n}\n\nexport function* theoDoiUpdateCommentSaga() {\n  yield takeLatest(UPDATE_COMMENT_SAGA, updateCommentSaga);\n}\n","import { all } from \"redux-saga/effects\";\nimport * as ToDoListSaga from \"./ToDoListSaga\";\n// import {theoDoiActionGetTaskApi} from './ToDoListSaga'\nimport * as Cyberbugs from \"./Cyberbugs/UserCyberbugsSaga\";\nimport * as ProjectCategorySaga from \"./Cyberbugs/ProjectCategorySaga\";\nimport * as ProjectSaga from \"./Cyberbugs/ProjectSaga\";\nimport * as TaskTypeSaga from \"./Cyberbugs/TaskTypeSaga\";\nimport * as PrioritySaga from \"./Cyberbugs/PrioritySaga\";\nimport * as TaskSaga from \"./Cyberbugs/TaskSaga\";\nimport * as StatusSaga from \"./Cyberbugs/StatusSaga\";\nimport * as CommentSaga from \"./Cyberbugs/CommentSaga\";\n\nexport function* rootSaga() {\n  yield all([\n    //Nghiệp vụ theo dõi các action saga todolist\n    ToDoListSaga.theoDoiActionGetTaskApi(),\n    ToDoListSaga.theoDoiActionAddTaskApi(),\n    ToDoListSaga.theoDoiActionDeleteTask(),\n    ToDoListSaga.theoDoiDoneTask(),\n    ToDoListSaga.theoDoiRejectTask(),\n\n    //Nghiệp vụ cyberbugs .... ,\n    Cyberbugs.theoDoiSignin(),\n    Cyberbugs.theoDoiGetUser(),\n    Cyberbugs.theoDoiRemoveUserProject(),\n    Cyberbugs.theoDoiAddUserProject(),\n    Cyberbugs.theoDoiGetUserByProjectIdSaga(),\n    Cyberbugs.theoDoiSignUpSaga(),\n    Cyberbugs.theoDoiDeleteUserSaga(),\n    Cyberbugs.theoDoiEditUserSaga(),\n    Cyberbugs.theoDoiAddUserSaga(),\n\n    ProjectCategorySaga.theoDoigetAllProjectCategory(),\n    ProjectSaga.theoDoiCreateProjectSaga(),\n    ProjectSaga.theoDoiGetListProjectSaga(),\n    ProjectSaga.theoDoiUpdateProjectSaga(),\n    ProjectSaga.theoDoiDeleteProject(),\n    ProjectSaga.theoDoiGetProjectDetail(),\n    ProjectSaga.theoDoiGetAllProjectSaga(),\n    StatusSaga.theoDoiGetAllStatusSaga(),\n\n    TaskTypeSaga.theoDoiGetAllTaskTypeSaga(),\n    PrioritySaga.theoDoiGetAllPriority(),\n\n    TaskSaga.theoDoiCreateTaskSaga(),\n    TaskSaga.theoDoiGetTaskDetailSaga(),\n    TaskSaga.theoDoiUpdateTaskStatusSaga(),\n    TaskSaga.theoDoiHandleChangePostApi(),\n    TaskSaga.theoDoiUdpateTask(),\n\n    CommentSaga.theoDoiInsertCommentSaga(),\n    CommentSaga.theoDoiDeleteCommentSaga(),\n    CommentSaga.theoDoiUpdateCommentSaga()\n  ]);\n}\n","const historyState = {\n  history: {}\n};\n\nexport const HistoryReducer = (state = historyState, action) => {\n  switch (action.type) {\n    case \"ADD_HISTORY\": {\n      state.history = action.history;\n      return { ...state };\n    }\n    default:\n      return { ...state };\n  }\n};\n","import { USLOGIN } from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_USER_BY_PROJECT_ID } from \"../constants/Cyberbugs/UserConstatnts\";\n\nconst { USER_LOGIN } = require(\"../../util/constants/settingSystem\");\n\nlet usLogin = {};\n\nif (localStorage.getItem(USER_LOGIN)) {\n  usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\n}\n\nconst stateDefault = {\n  userLogin: usLogin,\n  userSearch: [],\n  arrUser: [] //Array user cho thẻ select create task\n};\n\nexport const UserLoginCyberBugsReducer = (state = stateDefault, action) => {\n  switch (action.type) {\n    case USLOGIN: {\n      state.userLogin = action.userLogin;\n      return { ...state };\n    }\n\n    case \"GET_USER_SEARCH\": {\n      state.userSearch = action.lstUserSearch;\n      return { ...state };\n    }\n\n    case GET_USER_BY_PROJECT_ID: {\n      return { ...state, arrUser: action.arrUser };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n","import { GET_ALL_PROJECT_CATEGORY } from \"../constants/Cyberbugs/Cyberbugs\";\n\n\nconst stateDefault = {\n    arrProjectCategory : []\n}\n\n\n\n\nexport const ProjectCategoryReducer = (state = stateDefault,action) => {\n    switch(action.type){\n\n        case GET_ALL_PROJECT_CATEGORY: {\n            state.arrProjectCategory = action.data;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import { GET_ALL_PROJECT } from \"../constants/Cyberbugs/ProjectCyberBugsConstants\";\n\nconst stateDefault = {\n  projectList: [],\n  arrProject: [] //Get allproject cho dropdown\n};\n\nexport const ProjectCyberBugsReducer = (state = stateDefault, action) => {\n  switch (action.type) {\n    case \"GET_LIST_PROJECT\": {\n      state.projectList = action.projectList;\n      return { ...state };\n    }\n\n    case GET_ALL_PROJECT: {\n      // state.arrProject = action.arrProject;\n      return { ...state, arrProject: action.arrProject };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n","import React from 'react'\nconst initialState = {\n    visible: false,\n    title:'',\n    ComponentContentDrawer: <p>default</p>,\n    callBackSubmit: (propsValue) => { alert('click demo!') }\n}\n\nexport const drawerReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'OPEN_DRAWER':\n            return { ...state, visible: true }\n        case 'CLOSE_DRAWER':\n            return { ...state, visible: false }\n        case 'OPEN_FORM_EDIT_PROJECT': {\n            state.visible = true;\n            state.ComponentContentDrawer = action.Component;\n            state.title = action.title;\n            return { ...state }\n\n        }\n        case 'SET_SUBMIT_EDIT_PROJECT': {\n            state.callBackSubmit = action.submitFunction;\n            return {...state};\n        }\n\n        case 'SET_SUBMIT_CREATE_TASK' : {\n            return {...state,callBackSubmit:action.submitFunction}\n        }\n\n        case 'OPEN_FORM_CREATE_TASK' : {\n            state.visible = true;\n            state.title = action.title;\n            state.ComponentContentDrawer = action.Component;\n            return {...state};\n\n        }\n\n        \n\n        default:\n            return state\n    }\n}\n","\nconst initialState = {\n    projectEdit: {\n        \"id\": 0,\n        \"projectName\": \"string\",\n        \"creator\": 0,\n        \"description\": \"string\",\n        \"categoryId\": \"2\"\n      },\n    projectDetail:{\n        \n    }\n}\n\nexport const ProjectReducer =  (state = initialState,  action) => {\n    switch (action.type) {\n    \n    case  'EDIT_PROJECT': {\n        state.projectEdit = action.projectEditModel;\n        return {...state}\n\n    }\n    case 'PUT_PROJECT_DETAIL': {\n        state.projectDetail = action.projectDetail;\n        return {...state}\n    } \n    \n    default:\n        return state\n    }\n}\n","import { GET_ALL_TASK_TYPE } from \"../constants/Cyberbugs/TaskTypeConstants\"\n\nconst initialState = {\n    arrTaskType: []\n}\n\nexport const TaskTypeReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_TASK_TYPE:\n        return { ...state, arrTaskType:action.arrTaskType }\n\n    default:\n        return state\n    }\n}\n","import { GET_ALL_PRIORITY } from \"../constants/Cyberbugs/PriorityConstants\"\n\nconst initialState = {\n    arrPriority : []\n}\n\nexport const PriorityReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_PRIORITY:\n        return { ...state,arrPriority:action.arrPriority }\n\n    default:\n        return state\n    }\n}\n","import { GET_ALL_STATUS } from \"../constants/Cyberbugs/StatusConstant\"\n\nconst initialState = {\n    arrStatus:[]\n}\n\nexport const StatusReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_STATUS:\n\n        // state.arrStatus = action.arrStatus;\n        return { ...state,arrStatus :action.arrStatus }\n\n    default:\n        return state\n    }\n}\n","import {\n  CHANGE_ASSIGNESS,\n  CHANGE_TASK_MODAL,\n  GET_TASK_DETAIL,\n  REMOVE_USER_ASSIGN\n} from \"../constants/Cyberbugs/TaskConstants\";\n\nconst initialState = {\n  taskDetailModal: {\n    priorityTask: {\n      priorityId: 1,\n      priority: \"High\"\n    },\n    taskTypeDetail: {\n      id: 1,\n      taskType: \"bug\"\n    },\n    assigness: [\n      {\n        id: 68,\n        avatar: \"https://ui-avatars.com/api/?name=khải\",\n        name: \"khải\",\n        alias: \"khai\"\n      },\n      {\n        id: 69,\n        avatar: \"https://ui-avatars.com/api/?name=thoa\",\n        name: \"thoa\",\n        alias: \"thoa\"\n      }\n    ],\n    lstComment: [],\n    taskId: 54,\n    taskName: \"task 1\",\n    alias: \"task-1\",\n    description:\n      \"<p>Before you start work on an issue, you can set a time or other type of estimate to calculate how much work you believe it'll take to resolve it. Once you've started to work on a specific issue, log time to keep a record of it.</p>\\n<p>&nbsp;</p>\\n<ul>\\n<li>Open the issue and select&nbsp;&bull;&bull;&bull; &gt;&nbsp;Time tracking</li>\\n<li>Fill in the<strong>&nbsp;Time Spent</strong>&nbsp;field</li>\\n<li>Fill in the <strong>Time Remaining</strong> field and click Save</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h3><u>That's it!</u></h3>\\n<h1>💯💯</h1>\\n<p>&nbsp;</p>\",\n    statusId: \"2\",\n    originalEstimate: 30,\n    timeTrackingSpent: 10,\n    timeTrackingRemaining: 10,\n    typeId: 1,\n    priorityId: 1,\n    projectId: 109\n  }\n};\n\nexport const TaskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TASK_DETAIL: {\n      // console.log(action.taskDetailModal);\n      return { ...state, taskDetailModal: action.taskDetailModal };\n    }\n    case CHANGE_TASK_MODAL: {\n      const { name, value } = action;\n      // console.log('value',value)\n      // console.log(state.taskDetailModal)\n      return {\n        ...state,\n        taskDetailModal: { ...state.taskDetailModal, [name]: value }\n      };\n    }\n\n    case CHANGE_ASSIGNESS: {\n      state.taskDetailModal.assigness = [\n        ...state.taskDetailModal.assigness,\n        action.userSelected\n      ];\n      // console.log('state',state)\n      return { ...state };\n    }\n\n    case REMOVE_USER_ASSIGN: {\n      state.taskDetailModal.assigness = [\n        ...state.taskDetailModal.assigness.filter(\n          (us) => us.id !== action.userId\n        )\n      ];\n      return { ...state };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  RESET_UPDATING_COMMENT,\n  SET_UPDATING_COMMENT\n} from \"../constants/Cyberbugs/CommentConstants\";\n\nconst initialState = {\n  updatingComment: {}\n};\n\nconst CommentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_UPDATING_COMMENT:\n      return { ...state, updatingComment: action.updatingComment };\n\n    case RESET_UPDATING_COMMENT:\n      return { ...state, updatingComment: {} };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default CommentReducer;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport ToDoListReducer from \"./reducers/ToDoListReducer\";\nimport LoadingReducer from \"./reducers/LoadingReducer\";\nimport { ModalReducer } from \"./reducers/ModalReducer\";\nimport reduxThunk from \"redux-thunk\";\n\n//middleware saga\nimport createMiddleWareSaga from \"redux-saga\";\nimport { rootSaga } from \"./sagas/rootSaga\";\nimport { HistoryReducer } from \"./reducers/HistoryReducer\";\nimport { UserLoginCyberBugsReducer } from \"./reducers/UserCyberBugsReducer\";\nimport { ProjectCategoryReducer } from \"./reducers/ProjectCategoryReducer\";\nimport { ProjectCyberBugsReducer } from \"./reducers/ProjectCyberBugsReducer\";\nimport { drawerReducer } from \"./reducers/DrawerCyberbugs\";\nimport { ProjectReducer } from \"./reducers/ProjectReducer\";\nimport { TaskTypeReducer } from \"./reducers/TaskTypeReducer\";\nimport { PriorityReducer } from \"./reducers/PriorityReducer\";\nimport { StatusReducer } from \"./reducers/StatusReducer\";\nimport { TaskReducer } from \"./reducers/TaskReducer\";\nimport CommentReducer from \"./reducers/CommentReducer\";\n\nconst middleWareSaga = createMiddleWareSaga();\nconst rootReducer = combineReducers({\n  //reducer khai báo tại đây\n  ToDoListReducer,\n  LoadingReducer,\n  ModalReducer,\n  HistoryReducer,\n  UserLoginCyberBugsReducer,\n  ProjectCategoryReducer,\n  ProjectCyberBugsReducer,\n  drawerReducer,\n  ProjectReducer,\n  TaskTypeReducer,\n  PriorityReducer,\n  StatusReducer,\n  TaskReducer,\n  CommentReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(reduxThunk, middleWareSaga)\n);\n\n//Gọi saga\nmiddleWareSaga.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/configStore\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport { Router } from \"react-router-dom\";\nimport { history } from \"./util/history\";\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}